{"version":3,"sources":["../webpack/bootstrap","Pieces/FIDE/Bishop.ts","Pieces/FIDE/Rook.ts","Pieces/FIDE/Queen.ts","Pieces/FIDE/King.ts","assets/Pieces/FIDE/pawn_white.svg","assets/Pieces/FIDE/pawn_black.svg","assets/Pieces/FIDE/knight_white.svg","assets/Pieces/FIDE/knight_black.svg","assets/Pieces/FIDE/bishop_white.svg","assets/Pieces/FIDE/bishop_black.svg","assets/Pieces/FIDE/rook_white.svg","assets/Pieces/FIDE/rook_black.svg","assets/Pieces/FIDE/queen_white.svg","assets/Pieces/FIDE/queen_black.svg","assets/Pieces/FIDE/king_white.svg","assets/Pieces/FIDE/king_black.svg","Pieces/COLBOUND/Waffle.ts","Pieces/COLBOUND/Bede.ts","Pieces/COLBOUND/Warbishop.ts","Pieces/COLBOUND/Cardinal.ts","Pieces/OTHER/DummyPawn.ts","assets/Pieces/COL/bede_white.svg","assets/Pieces/COL/bede_black.svg","assets/Pieces/COL/waffle_white.svg","assets/Pieces/COL/waffle_black.svg","assets/Pieces/COL/warbishop_white.svg","assets/Pieces/COL/warbishop_black.svg","assets/Pieces/COL/cardinal_white.svg","assets/Pieces/COL/cardinal_black.svg","assets/Pieces/COL/dummy_pawn_white.svg","assets/Pieces/COL/dummy_pawn_black.svg","Pieces/OMEGA/Champion.ts","Pieces/OMEGA/Wizard.ts","Pieces/OMEGA/Jester.ts","assets/Pieces/OMEGA/champion_white.svg","assets/Pieces/OMEGA/champion_black.svg","assets/Pieces/OMEGA/wizard_white.svg","assets/Pieces/OMEGA/wizard_black.svg","assets/Pieces/OMEGA/jester_white.svg","assets/Pieces/OMEGA/jester_black.svg","Classes/Piece.ts","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Cards/Expansions.ts","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","Cards/Card.ts","helpers/DifferentColours.ts","helpers/RiderMoves.ts","Pieces/GamePiece.ts","Pieces/ValueGrids.ts","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","Cards/Cards.ts","helpers/Checks.ts","helpers/Adjacency.ts","Classes/Move.ts","Classes/Board.ts","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Classes/OngoingEffect.ts","helpers/MoveFilter.ts","helpers/Utils.ts","Cards/FIDE/Reposition_Card.ts","Cards/CRUSADERS/Deception_Card.ts","Cards/CRUSADERS/Oust_Card.ts","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","Pieces/FIDE/Knight.ts","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","Classes/Game.ts","Cards/FIDE/Expendable_Card.ts","Cards/FIDE/Advance_Card.ts","Cards/FIDE/TacticalRetreat_Card.ts","Cards/FIDE/Mount_Card.ts","Cards/CRUSADERS/Adjust_Card.ts","Cards/CRUSADERS/Inquisition_Card.ts","Cards/CRUSADERS/Hallow_Card.ts","Cards/CRUSADERS/Repent_Card.ts","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","types.ts","Classes/CardMove.ts","Cards/FIDE/Demote_Card.ts","Cards/FIDE/Maneuver_Card.ts","Cards/FIDE/Flee_Card.ts","Cards/FIDE/Promotion_Card.ts","Cards/FIDE/BattlePlan_Card.ts","Cards/CRUSADERS/Anoint_Card.ts","Cards/CRUSADERS/Clergy_Card.ts","Cards/CRUSADERS/Convert_Card.ts","Cards/CRUSADERS/Envoy_Card.ts","Pieces/FIDE/Pawn.ts","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/regenerator/index.js","Presets/Decks.ts","helpers/BoardGenerators.ts","../node_modules/regenerator-runtime/runtime.js","../node_modules/webpack/buildin/global.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../../../src/comlink.ts","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","helpers/Evaluation.ts","WebWorker/IncludePromotions.ts","WebWorker/MiniMax.ts","WebWorker/QueryOpeningBook.ts","WebWorker/HashTable.ts","WebWorker/MoveGenerator.ts","WebWorker/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Bishop","materialValue","engineValue","valueGrid","bishopGrid","evaluate","shortName","longName","movesDescription","specialMoves","notes","categories","getLegalMoves","position","board","colour","moves","push","getLegalRiderMoves","Piece","getFile","GamePiece","Rook","rookGrid","getRank","Queen","queenGrid","King","kingGrid","history","getLegalSingleMoves","originalSquare","queensRook","kingsRook","kingMoves","filter","move","moving","captured","length","Bede","None","krMoves","from","to","special","qrMoves","qbMoves","Waffle","knightGrid","Warbishop","Cardinal","Knight","DummyPawn","pawnGrid","Pawn","map","Math","abs","Champion","Wizard","Jester","pieceMoves","reverse","differentColours","additional","piece","getPiece","PIECES","PIECE_OBJECTS","isWhite","isBlack","getSquareName","FILES","getStyle","flipped","gridRow","gridColumn","getImage","w_pawn","b_pawn","w_knight","b_knight","w_bishop","b_bishop","w_rook","b_rook","w_queen","b_queen","w_king","b_king","w_waffle","b_waffle","w_warbishop","b_warbishop","w_bede","b_bede","w_cardinal","b_cardinal","w_dummyPawn","b_dummyPawn","w_champion","b_champion","w_wizard","b_wizard","w_jester","b_jester","_defineProperties","target","props","descriptor","configurable","writable","_createClass","Constructor","protoProps","staticProps","_classCallCheck","instance","TypeError","_inherits","subClass","superClass","constructor","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_typeof","obj","iterator","_possibleConstructorReturn","self","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","isNativeReflectConstruct","result","Super","NewTarget","this","Reflect","construct","arguments","apply","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","unsupportedIterableToArray","FIDE_EXPANSION","CRUSADER_EXPANSION","getRandomValues","rnds8","Uint8Array","rng","crypto","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","toString","substr","stringify","offset","undefined","toLowerCase","v4","options","buf","rnds","random","Card","cardName","description","id","expac","targets","fast","cost","unMoveType","getValidTargets","playCard","trackPiece","square","generateUUID","getUUID","getUUIDWithInfo","regenerateUUID","sameColour","comparison","b","pos","cb","callbacks","depth","nextSquare","obstructed","iterations","_slicedToArray","_i","_s","_e","_arr","_n","_d","next","done","err","_defineProperty","ALL_CARDS","Advance_Card","Expendable_Card","TacticalRetreat_Card","Reposition_Card","Mount_Card","Demote_Card","BattlePlan_Card","Maneuver_Card","Flee_Card","Promotion_Card","Adjust_Card","Inquisition_Card","Hallow_Card","Repent_Card","Oust_Card","Envoy_Card","Anoint_Card","Deception_Card","Clergy_Card","Convert_Card","isCheck","legalMoves","wKing","indexOf","bKing","Board","filterLegalMoves","effects","game","Game","forEach","effect","addOngoingEffect","OngoingEffect","getSquare","getName","getDurationRemaining","getToolTip","getTarget","e","oustEffects","pieceObj","pieceCanMove","reduce","validMoveExists","Move","stillInCheck","getBoard","getMoves","mv","ActualMove","UnMove","isThreatened","adjacentSquares","corners","adj","f","_from","_to","_moving","_captured","_specify","NONE","_special","_additional","specify","getMoveName","isCardMove","promotionTo","mPiece","pieceName","captureText","destination","specification","FILE","BOTH","RANK","fullOptions","assign","ignore","pieceObject","getThreats","_createForOfIteratorHelper","allowArrayLike","it","F","normalCompletion","didErr","step","_e2","_affecting","_name","_duration","_toolTip","_target","affecting","initialDuration","durationRemaining","toolTip","getInitialDuration","updateSquare","_square","tickDownDuration","unTickDuration","getActualMoves","randomFromList","list","floor","arraysAreEqual","a","el","index","acc","previousTargets","validTargets","square1","square2","updateGameBoard","piece1","piece2","target1","target2","_unsupportedIterableToArray","minLen","slice","ownKeys","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread2","source","getOwnPropertyDescriptors","defineProperties","_board","generateFIDEBoard","_history","_whiteDeck","FIDEDECK","_blackDeck","currentTurn","gameLength","whiteHand","blackHand","whiteDeck","blackDeck","whiteCurrentDeck","blackCurrentDeck","ongoingEffects","pop","getCurrentOngoingEffects","rookDistance","rookSquare","undoEndOfTurnCheck","CardMove","boardBefore","returnedCard","card","effectIndexesToRemove","endOfTurnCheck","checkForCardDraw","checkForUndoCardDraw","DrawCard","whiteCard","blackCard","PlayCard","cardMove","removalIndex","console","log","quantity","drawn","Number","parseInt","getCurrentTurn","getWhiteHand","getBlackHand","getCurrentPlayerHand","getChaosScore","chaosScore","getWhiteCurrentDeck","getBlackCurrentDeck","getWhiteDeck","getBlackDeck","getCurrentPlayerCurrentDeck","getNonCurrentPlayerCurrentDeck","getOngoingEffects","getLastMove","dangerouslySetCurrentTurn","turn","setWhiteHand","setBlackHand","callback","cards","_c","global","window","updateBoard","update","ADD_CARD_TO_HAND","targetSquare","prevSquare","adjSq","_arrayLikeToArray","len","arr2","_cardName","_boardBefore","_targets","knightMoves","king","rider","final","currentCol","capture","lastMove","_setPrototypeOf","_isNativeReflectConstruct","sham","Proxy","Boolean","valueOf","Deck","_cards","generateEmptyBoard","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","fn","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","resolve","reject","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","async","Promise","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","g","Parent","args","Class","proxyMarker","createEndpoint","releaseProxy","throwMarker","isObject","val","transferHandlers","Map","canHandle","serialize","MessageChannel","port1","port2","expose","deserialize","port","start","createProxy","isError","message","stack","serialized","ep","addEventListener","ev","data","returnValue","path","argumentList","fromWireValue","parent","prop","rawValue","transfer","catch","toWireValue","wireValue","transferables","postMessage","removeEventListener","closeEndPoint","endpoint","isMessagePort","close","throwIfProxyReleased","isReleased","isProxyReleased","proxy","requestResponseMessage","set","_thisArg","rawArgumentList","last","processArguments","processed","v","concat","transferCache","WeakMap","transfers","handler","msg","fill","MAX_SAFE_INTEGER","join","asyncGeneratorStep","gen","_next","_throw","positionalEngineEvaluation","_pieces","startTime","performance","now","NEGATIVE_INFINITY","POSITIVE_INFINITY","pieces","elapsed","includePromotion","army","validPromotionPieces","cur","sort","filterPromotionPieces","promotions","actualMoves","miniMax","maximising","hashGet","hashSet","counter","original_depth","alpha","Infinity","beta","hand","handColour","fastGetPiece","col","g_board","g_moves","g_moves_actual","g_chaosScore","partialLegalCaptures","partialLegalMoves","filteredLegalMoves","filteredLegalCaptures","unorderedMoves","unorderedCaptures","orderedPromotionMoves","orderedCaptures","orderedPawnMoves","remainingMoves","isCheckMate","oppoonentLegalCaptures","quiescence_quiet","quiet","move_depth","partFilter","hashedEval","temp_quiet","temp_depth","evaluatingFrom","minmax","max","min","playable_hand","filteredHand","targetCombinations","getSubsequentTargets","queryOpeningBook","firstMove","h","openingName","OpeningBook","opening","om","parsedOM","split","isMatch","nextMove","toStr","pseudo","legal","movingFrom","validMove","transpositionTable","table","size","charCodeAt","evaluation","turnNumber","hash","pairIndex","pair","backgroundEvaluating","beginBackgroundEvaluation","nodes","moveGenerator","duration","parsedHand","DEPTH","group","time","q","JSON","playableCard","timeEnd","groupEnd","endBackgroundEvaluation"],"mappings":"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","file":"static/js/opponent-webworker.6656869b.chunk.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/BenLeJeune/epic-fantasy-chess/tree/gh-pages/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 59);\n","import GamePiece from \"../GamePiece\";\nimport {legalMove, Move, tag} from \"../../types\";\nimport {getLegalRiderMoves, getLegalSingleMoves} from \"../../helpers/RiderMoves\";\nimport Piece from \"../../Classes/Piece\";\nimport {bishopGrid} from \"../ValueGrids\";\n\nexport default class Bishop extends GamePiece {\n\n    //eval\n    public materialValue = 3;\n    public engineValue = 330;\n    public valueGrid = bishopGrid;\n    public evaluate = ( p : number ) => this.engineValue;\n\n    //naming & display\n    public shortName = Bishop.shortName;\n    public longName = Bishop.longName;\n    public static shortName = \"B\";\n    public static longName = \"Bishop\";\n\n    public movesDescription = \"Moves any number of squares diagonally.\";\n    public specialMoves = []\n    public notes = \"Is colour-bound.\";\n    public categories = [ \"Minor\", \"Bishop\", \"Colour-bound\", \"FIDE\" ] as tag[];\n\n    public getLegalMoves : ( position : number,  board : number[], mode : \"all\" | \"moves\" | \"captures\", colour : number) => legalMove[] = ( position, board, mode, colour = 1 ) => {\n        //Let's use this as a test for the legal rider moves\n\n        let moves = [] as legalMove[];\n        moves.push( ...getLegalRiderMoves(\n            board, position, Piece.Bishop * colour, [\n                p => Piece.getFile(p) !== 0 ? p + 7 : p, p => Piece.getFile(p) !== 0 ? p - 9 : p,\n                p => Piece.getFile(p) !== 7 ? p + 9 : p, p => Piece.getFile(p) !== 7 ? p - 7 : p,\n            ], mode\n        ) )\n\n        return moves;\n\n    }\n\n}","import GamePiece from \"../GamePiece\";\nimport {Move, legalMove, tag} from \"../../types\";\nimport {getLegalRiderMoves} from \"../../helpers/RiderMoves\";\nimport Piece from \"../../Classes/Piece\";\nimport {rookGrid} from \"../ValueGrids\";\n\nexport default class Rook extends GamePiece {\n\n    //eval\n    public materialValue = 5;\n    public engineValue = 500;\n    public valueGrid = rookGrid;\n    public evaluate = ( p : number ) => this.engineValue;\n\n    //naming & display\n    public shortName = Rook.shortName;\n    public longName = Rook.longName;\n    public static shortName = \"R\";\n    public static longName = \"Rook\";\n\n    public movesDescription = \"Moves any number of squares diagonally or vertically.\";\n    public specialMoves = [\n        \"If this starts on the first or eighth file, neither pieces have moved, and this doesn't cause the king to move through check, can \\\"castle\\\" with the king.\"\n    ]\n    public notes = \"\";\n    public categories = [ \"Major\", \"Rook\", \"Castler\", \"FIDE\" ] as tag[];\n\n    public getLegalMoves : ( position : number,  board : number[], mode : \"all\" | \"moves\" | \"captures\", colour : number) => legalMove[] = ( position, board, mode, colour = 1 ) => {\n        //Let's use this as a test for the legal rider moves\n\n        let moves = [] as legalMove[];\n        moves.push( ...getLegalRiderMoves(\n            board, position, Piece.Rook * colour, [\n                p => Piece.getRank(p) !== 0 ? p - 8 : p, p => Piece.getFile(p) !== 0 ? p - 1 : p,\n                p => Piece.getRank(p) !== 7 ? p + 8 : p, p => Piece.getFile(p) !== 7 ? p + 1 : p,\n            ], mode\n        ) )\n\n        return moves;\n\n    }\n\n}","import GamePiece from \"../GamePiece\";\nimport {legalMove, Move, tag} from \"../../types\";\nimport {getLegalRiderMoves} from \"../../helpers/RiderMoves\";\nimport Piece from \"../../Classes/Piece\";\nimport {queenGrid} from \"../ValueGrids\";\n\nexport default class Queen extends GamePiece {\n\n    //eval\n    public materialValue = 9;\n    public engineValue = 900;\n    public valueGrid = queenGrid;\n    public evaluate = ( p : number ) => this.engineValue;\n\n    //naming & display\n    public shortName = Queen.shortName;\n    public longName = Queen.longName;\n    public static shortName = \"Q\";\n    public static longName = \"Queen\";\n\n    public movesDescription = \"Moves any number of squares diagonally, horizontally and vertically - combining the moves of the Rook and the Bishop.\";\n    public specialMoves = []\n    public notes = \"\";\n    public categories = [ \"Major\", \"Queen\", \"FIDE\" ] as tag[];\n\n    public getLegalMoves : ( position : number,  board : number[], mode : \"all\" | \"moves\" | \"captures\", colour : number) => legalMove[] = ( position, board, mode, colour = 1 ) => {\n        //Let's use this as a test for the legal rider moves\n\n        let moves = [] as legalMove[];\n        moves.push( ...getLegalRiderMoves(\n            board, position, Piece.Queen * colour, [\n                p => Piece.getFile(p) !== 0 ? p + 7 : p, p => Piece.getFile(p) !== 0 ? p - 9 : p,\n                p => Piece.getFile(p) !== 7 ? p + 9 : p, p => Piece.getFile(p) !== 7 ? p - 7 : p,\n                p => Piece.getRank(p) !== 0 ? p - 8 : p, p => Piece.getFile(p) !== 0 ? p - 1 : p,\n                p => Piece.getRank(p) !== 7 ? p + 8 : p, p => Piece.getFile(p) !== 7 ? p + 1 : p,\n            ], mode\n        ) )\n\n        return moves;\n\n    }\n\n}","import GamePiece from \"../GamePiece\";\nimport {Move, legalMove, tag} from \"../../types\";\nimport {getLegalRiderMoves, getLegalSingleMoves} from \"../../helpers/RiderMoves\";\nimport Piece from \"../../Classes/Piece\";\nimport ActualMove from \"../../Classes/Move\";\nimport {isCheck} from \"../../helpers/Checks\";\nimport Board from \"../../Classes/Board\";\nimport {kingGrid} from \"../ValueGrids\";\n\nexport default class King extends GamePiece {\n\n    //eval\n    public materialValue = 999;\n    public engineValue = 20000;\n    public valueGrid = kingGrid;\n    public evaluate = ( p : number ) => this.engineValue;\n\n    //naming & display\n    public shortName = King.shortName;\n    public longName = King.longName;\n    public static shortName = \"K\";\n    public static longName = \"King\"\n\n    public movesDescription = \"Moves one square in any direction.\";\n    public specialMoves = [\n        \"If a Castler and this piece have not moved, and you don't pass through check to do so, you may move the king two squares towards the castler, placing the castler on the other side.\"\n    ]\n    public notes = \"Cannot move into check, and if possible must move out of check. If checkmated, you lose the game.\";\n    public categories = [ \"Major\", \"King\" ] as tag[];\n\n    public getLegalMoves : ( position : number,  board : number[], mode : \"all\" | \"moves\" | \"captures\", colour : number, history : ActualMove[]) => legalMove[] = ( position, board, mode, colour = 1, history ) => {\n        //Let's use this as a test for the legal rider moves\n\n        let moves = [] as legalMove[];\n        moves.push( ...getLegalSingleMoves(\n            board, position, Piece.King * colour, [\n                p => Piece.getFile(p) !== 0 ? p + 7 : p, p => Piece.getFile(p) !== 0 ? p - 9 : p,\n                p => Piece.getFile(p) !== 7 ? p + 9 : p, p => Piece.getFile(p) !== 7 ? p - 7 : p,\n                p => Piece.getRank(p) !== 0 ? p - 8 : p, p => Piece.getFile(p) !== 0 ? p - 1 : p,\n                p => Piece.getRank(p) !== 7 ? p + 8 : p, p => Piece.getFile(p) !== 7 ? p + 1 : p,\n            ], mode\n        ) );\n\n        //We also want to allow for castling\n        const originalSquare = colour > 0 ? 4 : 60; //e1 or e8\n        const queensRook = colour > 0 ? 0 : 56; //a1 or a8\n        const kingsRook = colour > 0 ? 7 : 63; //h1 or h8\n\n        //If the king is still in his original square (AND NOT CURRENTLY IN CHECK)\n        if ( position === originalSquare ) {\n\n            //Has the king been moved at all yet?\n            let kingMoves = history.filter( move => move.moving === Piece.King * colour || move.captured === Piece.King * colour );\n\n            if ( kingMoves.length === 0 ) {\n\n                //Has the king's rook been moved at all yet?\n                if ( (board[kingsRook] === Piece.Rook * colour || board[kingsRook] === Piece.Bede * colour) && board[kingsRook -1] === Piece.None && board[kingsRook - 2] === Piece.None ) {\n\n                    let krMoves = history.filter( move => move.from === kingsRook || move.to === kingsRook );\n                    if ( krMoves.length === 0)  moves.push({\n                        from: originalSquare,\n                        to: kingsRook - 1,\n                        special: \"CASTLE\"\n                    });\n                }\n\n                //Has the queen's rook been moved at all yet?\n\n                if ( board[queensRook] === Piece.Rook * colour && board[queensRook + 1] === Piece.None && board[queensRook + 2] === Piece.None\n                    && board[queensRook + 3] === Piece.None ) {\n\n                    let qrMoves = history.filter( move => move.from === queensRook || move.to === queensRook );\n                    if ( qrMoves.length === 0)  moves.push({\n                        from: originalSquare,\n                        to: queensRook + 2,\n                        special: \"CASTLE\"\n                    });\n                }\n                //The Queen's rook has special rules for castling if the rook-piece is colourbound, such as the Bede.\n                if ( board[queensRook] === Piece.Bede * colour && board[queensRook + 1] === Piece.None && board[queensRook +2] === Piece.None\n                    && board[queensRook + 3] === Piece.None) {\n\n                    let qbMoves = history.filter( move => move.from === queensRook || move.to === queensRook );\n                    if ( qbMoves.length === 0 ) moves.push({\n                        from: originalSquare,\n                        to: queensRook + 1,\n                        special: \"CASTLE\"\n                    })\n\n                }\n\n            }\n\n\n        }\n\n\n\n        return moves;\n\n    }\n\n}","export default __webpack_public_path__ + \"static/media/pawn_white.50273cc6.svg\";","export default __webpack_public_path__ + \"static/media/pawn_black.be5d44ca.svg\";","export default __webpack_public_path__ + \"static/media/knight_white.145b8796.svg\";","export default __webpack_public_path__ + \"static/media/knight_black.d714eeb4.svg\";","export default __webpack_public_path__ + \"static/media/bishop_white.8333f40f.svg\";","export default __webpack_public_path__ + \"static/media/bishop_black.629fc057.svg\";","export default __webpack_public_path__ + \"static/media/rook_white.ba9ac487.svg\";","export default __webpack_public_path__ + \"static/media/rook_black.fd4e01f5.svg\";","export default __webpack_public_path__ + \"static/media/queen_white.7a1aecff.svg\";","export default __webpack_public_path__ + \"static/media/queen_black.cf388bf4.svg\";","export default __webpack_public_path__ + \"static/media/king_white.3f959aab.svg\";","export default __webpack_public_path__ + \"static/media/king_black.6c8cc8fa.svg\";","import GamePiece from \"../GamePiece\";\nimport {Move, legalMove, tag} from \"../../types\";\nimport {getLegalRiderMoves, getLegalSingleMoves} from \"../../helpers/RiderMoves\";\nimport Piece from \"../../Classes/Piece\";\nimport ActualMove from \"../../Classes/Move\";\nimport { knightGrid } from \"../ValueGrids\";\n\nexport default class Waffle extends GamePiece {\n\n    //eval\n    public materialValue = 3;\n    public engineValue = 300;\n    public valueGrid = knightGrid;\n    public evaluate = ( p : number ) => this.engineValue;\n\n    //naming & display\n    public shortName = Waffle.shortName;\n    public longName = Waffle.longName;\n    public static shortName = \"WA\";\n    public  static longName = \"Waffle\";\n\n\n    public movesDescription = \"Can move one square horizontally/vertically, or leap two squares diagonally.\";\n    public specialMoves = []\n    public notes = \"Can leap over pieces.\";\n    public categories = [ \"Minor\", \"Knight\", \"Crusader\" ] as tag[];\n\n    public getLegalMoves : ( position : number,  board : number[], mode : \"all\" | \"moves\" | \"captures\", colour : number) => legalMove[] = ( position, board, mode, colour = 1 ) => {\n        //Let's use this as a test for the legal rider moves\n\n        let moves = [] as legalMove[];\n        moves.push( ...getLegalSingleMoves(\n            board, position, Piece.Waffle * colour, [\n                //Rookwise moves\n                p => Piece.getRank(p) >= 1 ? p - 8 : p, p => Piece.getRank(p) <= 6 ? p + 8 : p,\n                p => Piece.getFile(p) >= 1 ? p - 1 : p, p => Piece.getFile(p) <= 6 ? p + 1 : p,\n                //Bishopwise moves\n                p => Piece.getRank(p) <= 5 && Piece.getFile(p) <= 5 ? p + 18 : p, //up & right\n                p => Piece.getRank(p) <= 5 && Piece.getFile(p) >= 2 ? p + 14 : p, //up & left\n                p => Piece.getRank(p) >= 2 && Piece.getFile(p) <= 5 ? p - 14 : p, //down & right\n                p => Piece.getRank(p) >= 2 && Piece.getFile(p) >= 2 ? p - 18 : p //down & left\n            ], mode\n        ) )\n\n        return moves;\n\n    }\n\n}","import GamePiece from \"../GamePiece\";\nimport {legalMove, Move, tag} from \"../../types\";\nimport {getLegalRiderMoves, getLegalSingleMoves} from \"../../helpers/RiderMoves\";\nimport Piece from \"../../Classes/Piece\";\nimport {rookGrid} from \"../ValueGrids\"\nimport Bishop from \"../FIDE/Bishop\";\n\nexport default class Bede extends GamePiece {\n\n    //eval\n    public materialValue = 5;\n    public engineValue = 530;\n    public valueGrid = rookGrid;\n    public evaluate = ( p : number ) => this.engineValue;\n\n    //naming & displaying\n    public shortName = Bede.shortName;\n    public longName = Bede.longName;\n    public static shortName = \"BD\";\n    public static longName = \"Bede\";\n\n    public movesDescription = \"Moves as a bishop, or can leap 2 squares vertically or horizontally.\";\n    public specialMoves = [\n        \"If neither pieces have moved, and this doesn't cause the king to move through check, can \\\"castle\\\" with the king.\",\n        \"As this piece is colourbound, the king can move up to three squares to keep it on its colour.\"\n    ]\n    public notes = \"\";\n    public categories = [ \"Minor\", \"Rook\", \"Crusader\" ] as tag[];\n\n    public getLegalMoves : ( position : number,  board : number[], mode : \"all\" | \"moves\" | \"captures\", colour : number) => legalMove[] \n    = ( position, board, mode, colour = 1 ) => {\n        \n        let moves = [] as legalMove[];\n\n        //Give it all the moves a bishop would have\n        moves.push( ...new Bishop().getLegalMoves( position, board, mode, colour ) );\n\n        //Also give the vertical leap\n        moves.push( ...getLegalSingleMoves(\n            board, position, Piece.Bede * colour, [\n                p => Piece.getRank(p) >= 2 ? p - 16 : p, p => Piece.getRank(p) <= 5 ? p + 16 : p,\n                p => Piece.getFile(p) >= 2 ? p - 2 : p, p => Piece.getFile(p) <= 5 ? p + 2 : p\n            ], mode\n        ) );\n\n        return moves\n   }\n}","import GamePiece from \"../GamePiece\";\nimport {legalMove, Move, tag} from \"../../types\";\nimport {getLegalRiderMoves, getLegalSingleMoves} from \"../../helpers/RiderMoves\";\nimport Piece from \"../../Classes/Piece\";\nimport {bishopGrid} from \"../ValueGrids\";\nimport Waffle from \"./Waffle\";\n\nexport default class Warbishop extends GamePiece {\n\n    //eval\n    public materialValue = 4;\n    public engineValue = 400;\n    public valueGrid = bishopGrid;\n    public evaluate = ( p : number ) => this.engineValue;\n\n    //naming & display\n    public shortName = Warbishop.shortName;\n    public longName = Warbishop.longName;\n    public static shortName = \"WB\";\n    public static longName = \"Warbishop\";\n\n    public movesDescription = \"Can leap two squares vertically or horizontally, or one or two squares diagonally.\";\n    public specialMoves = []\n    public notes = \"Is colour-bound.\";\n    public categories = [ \"Minor\", \"Bishop\", \"Colour-bound\", \"Crusader\" ] as tag[];\n\n    public getLegalMoves : ( position : number,  board : number[], mode : \"all\" | \"moves\" | \"captures\", colour : number) => legalMove[] = ( position, board, mode, colour = 1 ) => {\n        //Let's use this as a test for the legal rider moves\n\n        let moves = [] as legalMove[];\n        moves.push( ...getLegalSingleMoves(\n            board, position, Piece.Warbishop * colour, [\n                //Single-move-diagonal\n                p => Piece.getRank(p) <= 6 && Piece.getFile(p) <= 6 ? p + 9 : p, //up & right\n                p => Piece.getRank(p) <= 6 && Piece.getFile(p) >= 1 ? p + 7 : p, //up & left\n                p => Piece.getRank(p) >= 1 && Piece.getFile(p) <= 6 ? p - 7 : p, //down & right\n                p => Piece.getRank(p) >= 1 && Piece.getFile(p) >= 1 ? p - 9 : p, //down & left\n                //Double-move diagonal\n                p => Piece.getRank(p) <= 5 && Piece.getFile(p) <= 5 ? p + 18 : p, //up & right\n                p => Piece.getRank(p) <= 5 && Piece.getFile(p) >= 2 ? p + 14 : p, //up & left\n                p => Piece.getRank(p) >= 2 && Piece.getFile(p) <= 5 ? p - 14 : p, //down & right\n                p => Piece.getRank(p) >= 2 && Piece.getFile(p) >= 2 ? p - 18 : p, //down & left\n                //Leaps from the bede\n                p => Piece.getRank(p) >= 2 ? p - 16 : p, p => Piece.getRank(p) <= 5 ? p + 16 : p,\n                p => Piece.getFile(p) >= 2 ? p - 2 : p, p => Piece.getFile(p) <= 5 ? p + 2 : p\n\n            ], mode\n        ) )\n\n        return moves;\n\n    }\n\n}","import GamePiece from \"../GamePiece\";\nimport {legalMove, Move, tag} from \"../../types\";\nimport {getLegalRiderMoves} from \"../../helpers/RiderMoves\";\nimport Piece from \"../../Classes/Piece\";\nimport {queenGrid} from \"../ValueGrids\";\nimport Knight from \"../FIDE/Knight\";\nimport Bishop from \"../FIDE/Bishop\";\n\nexport default class Cardinal extends GamePiece {\n\n    //eval\n    public materialValue = 7;\n    public engineValue = 700;\n    public valueGrid = queenGrid;\n    public evaluate = ( p : number ) => this.engineValue;\n\n    //naming & display\n    public shortName = Cardinal.shortName;\n    public longName = Cardinal.longName;\n    public static shortName = \"C\";\n    public static longName = \"Cardinal\";\n\n    public movesDescription = \"Moves any number of squares diagonally, or in an L-shape - combining the moves of the Knight and the Bishop.\";\n    public specialMoves = []\n    public notes = \"\";\n    public categories = [ \"Major\", \"Queen\", \"Crusader\" ] as tag[]\n\n    public getLegalMoves : ( position : number,  board : number[], mode : \"all\" | \"moves\" | \"captures\", colour : number) => legalMove[] = ( position, board, mode, colour = 1 ) => {\n        //Let's use this as a test for the legal rider moves\n\n        let moves = [] as legalMove[];\n        moves.push( ...new Knight().getLegalMoves( position, board, mode, colour ) );\n        moves.push(...new Bishop().getLegalMoves( position, board, mode, colour ))\n\n        return moves;\n\n    }\n\n}","import GamePiece from \"../GamePiece\";\nimport {Move, legalMove, SpecialMove, tag} from \"../../types\";\nimport {getLegalRiderMoves, getLegalSingleMoves} from \"../../helpers/RiderMoves\";\nimport Piece from \"../../Classes/Piece\";\nimport ActualMove from \"../../Classes/Move\";\nimport { pawnGrid } from \"../ValueGrids\";\n\nexport default class DummyPawn extends GamePiece {\n\n    //eval\n    public materialValue = 0.5;\n    public engineValue = 25;\n    public valueGrid = pawnGrid;\n    public evaluate = ( p : number ) => this.engineValue;\n\n    //naming & display\n    public shortName = DummyPawn.shortName;\n    public longName = DummyPawn.longName;\n    public static shortName = \"¬P\";\n    public static longName = \"Dummy Pawn\";\n\n    public movesDescription = \"Moves one square directly forward.\"\n    public specialMoves = [ ]\n    public notes = \"Cannot capture or promote\"\n    public categories = [ \"Minor\", \"Pawn\", \"Token\" ] as tag[];\n\n    public getLegalMoves : ( position : number,  board : number[], mode : \"all\" | \"moves\" | \"captures\", colour : number, history : ActualMove[]) => legalMove[] = ( position, board, mode, colour = 1, history ) => {\n        //Let's use this as a test for the legal rider moves\n\n        let moves = [] as legalMove[]\n\n        // PAWN MOVES\n        if ( mode !== \"captures\" ) {\n            if ( Piece.getRank( position ) === 1 || Piece.getRank( position ) === 6 ) moves.push(...getLegalRiderMoves(\n                board, position, Piece.Pawn * colour, [\n                    p => colour > 0 ? p + 8 : p - 8\n                ], \"moves\", 2\n            ).map( m => Math.abs( m.from - m.to ) === 16 ? { ...m, special : \"DOUBLE\" as SpecialMove } : m ))\n            else moves.push(...getLegalSingleMoves(\n                board, position, Piece.Pawn * colour, [\n                    p => colour > 0 ? p + 8 : p - 8\n                ], \"moves\"\n            ))\n        }\n\n        return moves;\n\n    }\n}\n\n\n\n","export default __webpack_public_path__ + \"static/media/bede_white.56fa5c65.svg\";","export default __webpack_public_path__ + \"static/media/bede_black.528c2b5e.svg\";","export default __webpack_public_path__ + \"static/media/waffle_white.ac9ddbc0.svg\";","export default __webpack_public_path__ + \"static/media/waffle_black.b8e5c779.svg\";","export default __webpack_public_path__ + \"static/media/warbishop_white.59df694b.svg\";","export default __webpack_public_path__ + \"static/media/warbishop_black.84a414c3.svg\";","export default __webpack_public_path__ + \"static/media/cardinal_white.abc22523.svg\";","export default __webpack_public_path__ + \"static/media/cardinal_black.b169cd4e.svg\";","export default __webpack_public_path__ + \"static/media/dummy_pawn_white.07ade20e.svg\";","export default __webpack_public_path__ + \"static/media/dummy_pawn_black.acf683a9.svg\";","import GamePiece from \"../GamePiece\";\nimport {legalMove, Move, tag} from \"../../types\";\nimport {getLegalRiderMoves, getLegalSingleMoves} from \"../../helpers/RiderMoves\";\nimport Piece from \"../../Classes/Piece\";\nimport {rookGrid} from \"../ValueGrids\"\nimport Bishop from \"../FIDE/Bishop\";\n\nexport default class Champion extends GamePiece {\n\n    //eval\n    public materialValue = 4;\n    public engineValue = 400;\n    public valueGrid = rookGrid;\n    public evaluate = ( p : number ) => this.engineValue;\n\n    //naming & displaying\n    public shortName = Champion.shortName;\n    public longName = Champion.longName;\n    public static shortName = \"CH\";\n    public static longName = \"Champion\";\n\n    public movesDescription = \"Leaps exactly 2 squares in any direction, or makes 1 move rookwise.\";\n    public specialMoves = []\n    public notes = \"\";\n    public categories = [ \"Minor\", \"Unique\", \"Omega\" ] as tag[];\n\n    public getLegalMoves : ( position : number,  board : number[], mode : \"all\" | \"moves\" | \"captures\", colour : number) => legalMove[]\n        = ( position, board, mode, colour = 1 ) => {\n\n        let moves = [] as legalMove[];\n\n\n        moves.push( ...getLegalSingleMoves(\n            board, position, Piece.Bede * colour, [\n                // Orthogonal Leaps\n                p => Piece.getRank(p) >= 2 ? p - 16 : p, // Down\n                p => Piece.getRank(p) <= 5 ? p + 16 : p, // Up\n                p => Piece.getFile(p) >= 2 ? p - 2 : p, // Left\n                p => Piece.getFile(p) <= 5 ? p + 2 : p, // Right\n                p => Piece.getRank(p) <= 5 && Piece.getFile(p) <= 5 ? p + 18 : p, //up & right\n                p => Piece.getRank(p) <= 5 && Piece.getFile(p) >= 2 ? p + 14 : p, //up & left\n                p => Piece.getRank(p) >= 2 && Piece.getFile(p) <= 5 ? p - 14 : p, //down & right\n                p => Piece.getRank(p) >= 2 && Piece.getFile(p) >= 2 ? p - 18 : p, //down & left\n                // Single orthogonal steps\n                p => Piece.getRank(p) >= 1 ? p - 8 : p, p => Piece.getRank(p) <= 6 ? p + 8 : p,\n                p => Piece.getFile(p) >= 1 ? p - 1 : p, p => Piece.getFile(p) <= 6 ? p + 1 : p\n            ], mode\n        ) );\n\n        return moves\n    }\n}","import GamePiece from \"../GamePiece\";\nimport {legalMove, Move, tag} from \"../../types\";\nimport {getLegalRiderMoves, getLegalSingleMoves} from \"../../helpers/RiderMoves\";\nimport Piece from \"../../Classes/Piece\";\nimport {knightGrid} from \"../ValueGrids\"\n\nexport default class Wizard extends GamePiece {\n\n    //eval\n    public materialValue = 4;\n    public engineValue = 460;\n    public valueGrid = knightGrid;\n    public evaluate = ( p : number ) => this.engineValue;\n\n    //naming & displaying\n    public shortName = Wizard.shortName;\n    public longName = Wizard.longName;\n    public static shortName = \"WI\";\n    public static longName = \"Wizard\";\n\n    public movesDescription = \"Leaps in an elongated knight move, three squares in one direction then one square perpendicular. Can also move one square diagonally.\";\n    public specialMoves = []\n    public notes = \"\";\n    public categories = [ \"Minor\", \"Unique\", \"Omega\" ] as tag[];\n\n    public getLegalMoves : ( position : number,  board : number[], mode : \"all\" | \"moves\" | \"captures\", colour : number) => legalMove[]\n        = ( position, board, mode, colour = 1 ) => {\n\n        let moves = [] as legalMove[];\n\n\n        //Leap 2 squares in any direction\n        moves.push( ...getLegalSingleMoves(\n            board, position, Piece.Bede * colour, [\n                // Elongated knight moves\n                p => Piece.getFile(p) >= 3 ? p + 5 : p,p => Piece.getFile(p) <= 4 ? p - 5 : p,\n                p => Piece.getFile(p) <= 4 ? p + 11 : p, p => Piece.getFile(p) >= 3 ? p - 11 : p,\n                p => Piece.getFile(p) >= 1 ? p + 23 : p, p => Piece.getFile(p) <= 6 ? p - 23 : p,\n                p => Piece.getFile(p) <= 6 ? p + 25 : p, p => Piece.getFile(p) >= 1 ? p - 25 : p,\n                // Orthogonal Leaps\n                p => Piece.getRank(p) <= 6 && Piece.getFile(p) <= 6 ? p + 9 : p, //up & right\n                p => Piece.getRank(p) <= 6 && Piece.getFile(p) >= 1 ? p + 7 : p, //up & left\n                p => Piece.getRank(p) >= 1 && Piece.getFile(p) <= 6 ? p - 7 : p, //down & right\n                p => Piece.getRank(p) >= 1 && Piece.getFile(p) >= 1 ? p - 9 : p, //down & left\n            ], mode\n        ) );\n\n        return moves\n    }\n}","import GamePiece from \"../GamePiece\";\nimport {legalMove, Move, tag} from \"../../types\";\nimport {getLegalRiderMoves, getLegalSingleMoves} from \"../../helpers/RiderMoves\";\nimport Piece from \"../../Classes/Piece\";\nimport {bishopGrid} from \"../ValueGrids\"\nimport ActualMove from \"../../Classes/Move\";\nimport {differentColours, sameColour} from \"../../helpers/DifferentColours\";\n\nexport default class Jester extends GamePiece {\n\n    //eval\n    public materialValue = 3;\n    public engineValue = 350;\n    public valueGrid = bishopGrid;\n    public evaluate = ( p : number ) => this.engineValue;\n\n    //naming & displaying\n    public shortName = Jester.shortName;\n    public longName = Jester.longName;\n    public static shortName = \"J\";\n    public static longName = \"Jester\";\n\n    public movesDescription = \"Moves as the piece your opponent last moved.\";\n    public specialMoves = []\n    public notes = \"Ignores card-based moves. Cannot move if your opponent hasn't moved a piece yet.\";\n    public categories = [ \"Minor\", \"Unique\", \"Omega\" ] as tag[];\n\n    public getLegalMoves : ( position : number,  board : number[], mode : \"all\" | \"moves\" | \"captures\", colour : number, history: ActualMove[]) => legalMove[]\n        = ( position, board, mode, colour = 1, history ) => {\n\n        let moves = [] as legalMove[];\n\n\n        // We want to find the piece our opponent last moved. THIS CAN'T BE A JESTER!\n        let pieceMoves = [...history].reverse().filter( m => differentColours(m.moving, colour)).filter( m => !m.additional.hasOwnProperty(\"isCardMove\") && Math.abs(m.moving) !== Piece.Jester );\n        if (pieceMoves.length >= 1) {\n            let m = pieceMoves[0], piece = Piece.getPiece(m.moving);\n            if (piece) {\n                moves.push(...piece.getLegalMoves(position, board, mode, colour, history));\n            }\n        }\n\n        return moves\n    }\n}","export default __webpack_public_path__ + \"static/media/champion_white.a993ecde.svg\";","export default __webpack_public_path__ + \"static/media/champion_black.7801b11e.svg\";","export default __webpack_public_path__ + \"static/media/wizard_white.dd2b757b.svg\";","export default __webpack_public_path__ + \"static/media/wizard_black.5c90220e.svg\";","export default __webpack_public_path__ + \"static/media/jester_white.5a769867.svg\";","export default __webpack_public_path__ + \"static/media/jester_black.d3196538.svg\";","import Pawn from \"../Pieces/FIDE/Pawn\";\nimport Knight from \"../Pieces/FIDE/Knight\";\nimport Bishop from \"../Pieces/FIDE/Bishop\";\nimport Rook from \"../Pieces/FIDE/Rook\";\nimport Queen from \"../Pieces/FIDE/Queen\";\nimport King from \"../Pieces/FIDE/King\";\nimport GamePiece from \"../Pieces/GamePiece\";\nimport {FILES} from \"../types\";\n\n//IMPORTING PIECE IMAGES\nimport w_pawn from \"../assets/Pieces/FIDE/pawn_white.svg\";\nimport b_pawn from \"../assets/Pieces/FIDE/pawn_black.svg\";\nimport w_knight from \"../assets/Pieces/FIDE/knight_white.svg\";\nimport b_knight from \"../assets/Pieces/FIDE/knight_black.svg\";\nimport w_bishop from \"../assets/Pieces/FIDE/bishop_white.svg\";\nimport b_bishop from \"../assets/Pieces/FIDE/bishop_black.svg\";\nimport w_rook from \"../assets/Pieces/FIDE/rook_white.svg\";\nimport b_rook from \"../assets/Pieces/FIDE/rook_black.svg\";\nimport w_queen from \"../assets/Pieces/FIDE/queen_white.svg\";\nimport b_queen from \"../assets/Pieces/FIDE/queen_black.svg\";\nimport w_king from \"../assets/Pieces/FIDE/king_white.svg\";\nimport b_king from \"../assets/Pieces/FIDE/king_black.svg\";\n\n//COLOURBOUND CLOBBERERS\nimport Waffle from \"../Pieces/COLBOUND/Waffle\";\nimport Bede from \"../Pieces/COLBOUND/Bede\";\nimport Warbishop from \"../Pieces/COLBOUND/Warbishop\";\nimport Cardinal from \"../Pieces/COLBOUND/Cardinal\";\nimport DummyPawn from \"../Pieces/OTHER/DummyPawn\";\n\nimport w_bede from \"../assets/Pieces/COL/bede_white.svg\";\nimport b_bede from \"../assets/Pieces/COL/bede_black.svg\";\nimport w_waffle from \"../assets/Pieces/COL/waffle_white.svg\";\nimport b_waffle from \"../assets/Pieces/COL/waffle_black.svg\";\nimport w_warbishop from \"../assets/Pieces/COL/warbishop_white.svg\";\nimport b_warbishop from \"../assets/Pieces/COL/warbishop_black.svg\";\nimport w_cardinal from \"../assets/Pieces/COL/cardinal_white.svg\";\nimport b_cardinal from \"../assets/Pieces/COL/cardinal_black.svg\";\nimport w_dummyPawn from \"../assets/Pieces/COL/dummy_pawn_white.svg\";\nimport b_dummyPawn from \"../assets/Pieces/COL/dummy_pawn_black.svg\";\n\n// OMEGA CHESS\nimport Champion from \"../Pieces/OMEGA/Champion\";\nimport Wizard from \"../Pieces/OMEGA/Wizard\";\nimport Jester from \"../Pieces/OMEGA/Jester\";\n\nimport w_champion from \"../assets/Pieces/OMEGA/champion_white.svg\";\nimport b_champion from \"../assets/Pieces/OMEGA/champion_black.svg\";\nimport w_wizard from \"../assets/Pieces/OMEGA/wizard_white.svg\";\nimport b_wizard from \"../assets/Pieces/OMEGA/wizard_black.svg\";\nimport w_jester from \"../assets/Pieces/OMEGA/jester_white.svg\";\nimport b_jester from \"../assets/Pieces/OMEGA/jester_black.svg\";\n\n\n\nexport default class Piece {\n\n    public static PIECES = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 ];\n    public static PIECE_OBJECTS = [\n        null, new Pawn(), new Knight(), new Bishop(), new Rook(), new Queen(), new King(),\n        new Waffle(), new Warbishop(), new Bede(), new Cardinal(), new DummyPawn(),\n        new Champion(), new Wizard(), new Jester()\n    ]\n\n    ///\n    /// PIECE NUMBER VALUES - negative for black!\n    ///\n    public static None = 0;\n    public static Pawn = 1;\n    public static Knight = 2;\n    public static Bishop = 3;\n    public static Rook = 4;\n    public static Queen = 5;\n    public static King = 6;\n\n    ///\n    /// COLOURBOUND CLOBBERERS VALUES\n    ///\n    public static Waffle = 7;\n    public static Warbishop = 8;\n    public static Bede = 9;\n    public static Cardinal = 10;\n    public static DummyPawn = 11; //TOKEN FOR CRUSADERS CARD\n\n    ///\n    /// OMEGA CHESS VALUES\n    ///\n    public static Champion = 12;\n    public static Wizard = 13;\n    public static Jester = 14;\n\n    public static isWhite = ( piece : number ) => piece > 0;\n    public static isBlack = ( piece : number ) => piece < 0;\n\n    public static getFile = ( position : number ) => position % 8;\n    public static getRank = ( position : number ) => ( position - ( position % 8 ) ) / 8;\n    public static getSquareName = ( position : number ) => `${ FILES[Piece.getFile(position)] }${ Piece.getRank(position) + 1 }`\n    public static getStyle = ( position : number, flipped: boolean = true ) => {\n        return {\n            gridRow: !flipped ? `${ 8 - Piece.getRank(position) }/${9 - Piece.getRank(position)}` : `${ 1 + Piece.getRank(position) }/${2 + Piece.getRank(position)}`,\n            gridColumn: !flipped ? `${ Piece.getFile(position) + 1 }/${Piece.getFile(position) + 2}` : `${ 8 - Piece.getFile(position) }/${9 - Piece.getFile(position)}`\n        }\n    }\n\n    public static getImage = ( piece : number ) => {\n        switch ( Math.abs(piece) ) {\n            case 0:\n                return \"\";\n            case Piece.Pawn:\n                return piece > 0 ? w_pawn : b_pawn;\n            case Piece.Knight:\n                return piece > 0 ? w_knight : b_knight;\n            case Piece.Bishop:\n                return piece > 0 ? w_bishop : b_bishop;\n            case Piece.Rook:\n                return piece > 0 ? w_rook : b_rook;\n            case Piece.Queen:\n                return piece > 0 ? w_queen : b_queen;\n            case Piece.King:\n                return piece > 0 ? w_king : b_king;\n            case Piece.Waffle:\n                return piece > 0 ? w_waffle : b_waffle;\n            case Piece.Warbishop:\n                return piece > 0 ? w_warbishop : b_warbishop;\n            case Piece.Bede:\n                return piece > 0 ? w_bede : b_bede;\n            case Piece.Cardinal:\n                return piece > 0 ? w_cardinal : b_cardinal;\n            case Piece.DummyPawn:\n                return piece > 0 ? w_dummyPawn : b_dummyPawn;\n            case Piece.Champion:\n                return piece > 0 ? w_champion : b_champion;\n            case Piece.Wizard:\n                return piece > 0 ? w_wizard : b_wizard;\n            case Piece.Jester:\n                return piece > 0 ? w_jester : b_jester;\n        }\n    }\n    public static getPiece : ( piece : number ) => GamePiece | null = (piece ) => Piece.PIECE_OBJECTS[ Math.abs(piece) ]\n\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","\nexport const FIDE_EXPANSION = \"FIDE\";\nexport const CRUSADER_EXPANSION = \"Crusaders\"","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import ActualMove from \"../Classes/Move\";\nimport Game from \"../Classes/Game\";\nimport { v4 as generateUUID } from \"uuid\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport OngoingEffect from \"../Classes/OngoingEffect\";\n\nexport default abstract class Card {\n\n    //This class will be used for storing data about cards\n    //It will never be directly instantiated, hence abstract\n\n    ///\n    /// NAMING & DISPLAYING\n    ///\n    public abstract readonly cardName: string; //e.g \"Expendable\"\n    public abstract readonly shortName: string; //e.g \"_Exp\" (Begin Card moves with a _)\n    public abstract readonly description: string; //e.g \"Summon a pawn.\"\n    public static readonly id: string;\n    public abstract readonly id: string;\n\n    public abstract readonly expac: string\n\n    ///\n    /// TARGETING & RESOLVING\n    ///\n    public abstract readonly targets: number; //the number of targets the card expects\n    public abstract readonly fast: boolean; //true/false\n    public abstract readonly cost: number; //chaos cost\n\n    ///\n    /// UNMOVING\n    ///\n    public abstract unMoveType: \"boardState\" | \"move\"; // \"boardState\" means the board state is reverted on unMove. \"move\" means the card makes a regular move.\n\n    // Returns an array of all valid target indexes\n    public abstract getValidTargets : (( board : number[], colour: number, history: ActualMove[], previousTargets?: number[], effects?: OngoingEffect[]) => number[])[]\n\n    // Resolves the playing of the card\n    public abstract playCard : ( targets: number[], game: Game ) => void;\n\n    // Tracks pieces moved by the card. Only needed for cards that move pieces in non-conventional ways (e.g swapping)\n    public trackPiece : ( square : number, targets: number[] ) => number = square => square;\n\n\n    //\n    /// TRACKING THE CARD\n    ///\n    private uuid: string = generateUUID();\n    public getUUID = () => this.uuid;\n    public getUUIDWithInfo = () => `${this.id}::${this.uuid}`\n    public regenerateUUID = () => this.uuid = generateUUID()\n\n}","///\n/// IS OPPOSING CAPTURE\n///\n\n//Abstracts the logic for whether or not something is a capture of an opposing piece\nconst differentColours : (piece : number, target : number ) => boolean\n    = (piece, target) => ( piece > 0 && target < 0 ) || ( piece < 0 && target > 0 );\n\n\nconst sameColour : ( piece : number, comparison : number ) => boolean\n    = (piece, comparison) => ( piece > 0 && comparison > 0 ) || ( piece < 0 && comparison < 0 )\n\nexport {\n    differentColours,\n    sameColour\n}","///\n/// MOVES\n///\n\nimport Piece from \"../Classes/Piece\";\nimport {differentColours} from \"./DifferentColours\";\nimport {legalMove} from \"../types\";\n\nconst getLegalSingleMoves : ( board : number[], position : number, piece : number, callbacks: ((p : number) => number)[], mode : \"all\" | \"moves\" | \"captures\" ) => legalMove[]\n= ( b, pos, p, cb, m ) =>  getLegalRiderMoves( b, pos, p, cb, m, 1 )\n\nconst getLegalRiderMoves: ( board : number[], position : number, piece : number, callbacks : (( p : number ) => number)[], mode : \"all\" | \"moves\" | \"captures\", depth? : number) => legalMove[]\n    = ( board, position, piece, callbacks, mode, depth = 8 ) => {\n\n    //We take an array of callbacks to check for\n    //Start with an empty array\n    let moves = [] as legalMove[]\n\n    //For each supplied callback\n    for ( let cb of callbacks ) {\n\n        //Get the first move in the riding sequence\n        let nextSquare = cb(position);\n        let obstructed = false;\n        let iterations = 0;\n        //While the riding is unobstructed\n        while ( !obstructed && nextSquare <= 63 && nextSquare >= 0 && iterations < depth ) {\n\n            //If the square is empty\n            if ( board[nextSquare] === Piece.None ) {\n                if ( mode !== \"captures\" ) moves.push({ from : position, to : nextSquare }) //Push, unless we only want captures.\n            }\n            //If the square isn't empty\n            else {\n                //If it's an opposing piece, don't push if we're only after captures\n                if ( differentColours( piece, board[nextSquare] ) ) {\n                    if ( mode !== \"moves\" ) {\n                        moves.push({from: position, to: nextSquare})\n                    } //Push, unless we only want moves\n                    obstructed = true;\n                }\n                //If it's a friendly piece,\n                else {\n                    obstructed = true;\n                }\n            }\n            //If we haven't been obstructed yet, get the next square\n            if ( !obstructed ) {\n                if ( nextSquare === cb(nextSquare) ) obstructed = true;\n                nextSquare = cb(nextSquare);\n                iterations++;\n            }\n        }\n\n    }\n\n    return moves;\n\n}\n\nexport {\n    getLegalRiderMoves,\n    getLegalSingleMoves\n}","import {legalMove, Move, tag} from \"../types\";\nimport ActualMove from \"../Classes/Move\";\n\nexport default abstract class GamePiece {\n\n    //This class will be used for storing data about chess pieces.\n    //It will never be instantiated, but will be used\n\n    ///\n    /// EVALUATION\n    ///\n    public abstract engineValue : number; //adjusted based on engine evaluation\n    public abstract materialValue : number; //e.g 3\n    public abstract valueGrid : number[]; //A multiplier for each position\n    public abstract evaluate : ( position : number ) => number; //A function to evaluate\n\n    ///\n    /// NAMING & DISPLAYING\n    ///\n    public abstract shortName : string; //e.g \"k\"\n    public abstract longName : string; //e.g \"Pawn\"\n\n    ///\n    /// LIBRARY DESCRIPTION\n    ///\n    public abstract movesDescription : string; // e.g \"One forward.\"\n    public abstract specialMoves : string[]; // e.g \"Can move two times on first turn\n    public abstract notes : string; //Miscellaneous notes\n    public abstract categories : tag[]; //Tags assigned to this piece\n\n    public getLegalMoves : ( position : number,  board : number[], mode : \"all\" | \"moves\" | \"captures\", colour : number, history : ActualMove[]) => legalMove[] =\n        ( position, board, mode, colour = 1, history ) => {\n            return board.map( ( p, square ) => {\n                if ( square !== position && p === 0) return {\n                    from : position,\n                    to : square,\n                };\n                else return null;\n            } ).filter( m => m !== null ) as legalMove[];\n\n        };\n}\n","/// THESE ARE LAID OUT AS A REGULAR CHESSBOARD\n/// THIS MEANS THAT INDEX [0] REPRESENTS SQUARE OF INDEX [63]\n/// WHEN EVALUATING WHITE PIECES, USE GRID[63 - INDEX]\n/// FOR BLACK PIECES, USE GRID[INDEX]\nexport const pawnGrid = [\n    0, 0, 0, 0, 0, 0, 0, 0,\n    50, 50, 50, 50, 50, 50, 50, 50,\n    10, 10, 20, 30, 30, 20, 10, 10,\n    5, 5, 10, 25, 25, 10, 5, 5,\n    0, 0, 0, 20, 20, 0, 0, 0,\n    5, -5, -10, 0, 0, -10, -5, 5,\n    5, 10, 10, -20, -20, 10, 10, 5,\n    0, 0, 0, 0, 0, 0, 0, 0\n]\nexport const knightGrid = [\n    -50, -40, -30, -30, -30, -30, -40, -50,\n    -40, -20, 0, 0, 0, 0, -20, -40,\n    -30, 0, 10, 15, 15, 10, 0, -30,\n    -30, 5, 15, 20, 20, 15, 5, -30,\n    -30, 0, 15, 20, 20, 15, 0, -30,\n    -30, 5, 10, 15, 15, 10, 5, -30,\n    -40, -20, 0, 5, 5, 0, -20, -40,\n    -50, -40, -30, -30, -30, -30, -40, -50,\n]\nexport const bishopGrid = [\n    -20, -10, -10, -10, -10, -10, -10, -20,\n    -10, 0, 0, 0, 0, 0, 0, -10,\n    -10, 0, 5, 10, 10, 5, 0, -10,\n    -10, 5, 5, 10, 10, 5, 5, -10,\n    -10, 0, 10, 10, 10, 10, 0, -10,\n    -10, 10, 10, 10, 10, 10, 10, -10,\n    -10, 5, 0, 0, 0, 0, 5, -10,\n    -20, -10, -10, -10, -10, -10, -10, -20,\n]\nexport const rookGrid = [\n    0, 0, 0, 0, 0, 0, 0, 0,\n    5, 10, 10, 10, 10, 10, 10, 5,\n    -5, 0, 0, 0, 0, 0, 0, -5,\n    -5, 0, 0, 0, 0, 0, 0, -5,\n    -5, 0, 0, 0, 0, 0, 0, -5,\n    -5, 0, 0, 0, 0, 0, 0, -5,\n    -5, 0, 0, 0, 0, 0, 0, -5,\n    0, 0, 5, 5, 5, 5, 0, 0\n]\nexport const queenGrid = [\n    -20, -10, -10, -5, -5, -10, -10, -20,\n    -10, 0, 0, 0, 0, 0, 0, -10,\n    -10, 0, 5, 5, 5, 5, 0, -10,\n    -5, 0, 5, 5, 5, 5, 0, -5,\n    0, 0, 5, 5, 5, 5, 0, -5,\n    -10, 5, 5, 5, 5, 5, 0, -10,\n    -10, 0, 5, 0, 0, 0, 0, -10,\n    -20, -10, -10, -5, -5, -10, -10, -20\n]\nexport const kingGrid =  [\n    -30, -40, -40, -50, -50, -40, -40, -30,\n    -30, -40, -40, -50, -50, -40, -40, -30,\n    -30, -40, -40, -50, -50, -40, -40, -30,\n    -30, -40, -40, -50, -50, -40, -40, -30,\n    -20, -30, -30, -40, -40, -30, -30, -20,\n    -10, -20, -20, -20, -20, -20, -20, -10,\n    20, 20, 0, 0, 0, 0, 20, 20,\n    20, 30, 10, 0, 0, 10, 30, 20\n]","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import Card from \"./Card\";\nimport Expendable_Card from \"./FIDE/Expendable_Card\";\nimport Advance_Card from \"./FIDE/Advance_Card\";\nimport TacticalRetreat_Card from \"./FIDE/TacticalRetreat_Card\";\nimport Reposition_Card from \"./FIDE/Reposition_Card\";\nimport Mount_Card from \"./FIDE/Mount_Card\";\nimport Demote_Card from \"./FIDE/Demote_Card\";\nimport Maneuver_Card from \"./FIDE/Maneuver_Card\";\nimport Flee_Card from \"./FIDE/Flee_Card\";\nimport Promotion_Card from \"./FIDE/Promotion_Card\";\nimport BattlePlan_Card from \"./FIDE/BattlePlan_Card\";\nimport Adjust_Card from \"./CRUSADERS/Adjust_Card\";\nimport Inquisition_Card from \"./CRUSADERS/Inquisition_Card\";\nimport Anoint_Card from \"./CRUSADERS/Anoint_Card\";\nimport Deception_Card from \"./CRUSADERS/Deception_Card\";\nimport Clergy_Card from \"./CRUSADERS/Clergy_Card\";\nimport Convert_Card from \"./CRUSADERS/Convert_Card\";\nimport Envoy_Card from \"./CRUSADERS/Envoy_Card\";\nimport Hallow_Card from \"./CRUSADERS/Hallow_Card\";\nimport Repent_Card from \"./CRUSADERS/Repent_Card\";\nimport Oust_Card from \"./CRUSADERS/Oust_Card\";\nimport Test_Card from \"./Test_Card\";\n\nconst ALL_CARDS : { [ cardId : string ] : Card } = {\n    [Advance_Card.id]: new Advance_Card(),\n    [Expendable_Card.id]: new Expendable_Card(),\n    [TacticalRetreat_Card.id]: new TacticalRetreat_Card(),\n    [Reposition_Card.id]: new Reposition_Card(),\n    [Mount_Card.id]: new Mount_Card(),\n    [Demote_Card.id]: new Demote_Card(),\n    [BattlePlan_Card.id]: new BattlePlan_Card(),\n    [Maneuver_Card.id]: new Maneuver_Card(),\n    [Flee_Card.id]: new Flee_Card(),\n    [Promotion_Card.id]: new Promotion_Card(),\n    [Adjust_Card.id]: new Adjust_Card(),\n    [Inquisition_Card.id]: new Inquisition_Card(),\n    [Hallow_Card.id]: new Hallow_Card(),\n    [Repent_Card.id]: new Repent_Card(),\n    [Oust_Card.id]: new Oust_Card(),\n    [Envoy_Card.id]: new Envoy_Card(),\n    [Anoint_Card.id]: new Anoint_Card(),\n    [Deception_Card.id]: new Deception_Card(),\n    [Clergy_Card.id]: new Clergy_Card(),\n    [Convert_Card.id]: new Convert_Card()\n};\n\nexport const TEST_HAND = [\n    new Oust_Card()\n]\n\nexport default ALL_CARDS;","///\n/// CHECKS\n///\n\nimport Piece from \"../Classes/Piece\";\nimport {legalMove, Move} from \"../types\";\nimport ActualMove from \"../Classes/Move\";\nimport Board from \"../Classes/Board\";\nimport Game from \"../Classes/Game\";\nimport OngoingEffect from \"../Classes/OngoingEffect\";\nimport {sameColour} from \"./DifferentColours\";\nimport CardMove from \"../Classes/CardMove\";\nimport ALL_CARDS from \"../Cards/Cards\";\nimport {getActualMoves} from \"./MoveFilter\";\n\n///\n/// IS THIS COLOUR'S KING IN CHECK?\nconst isCheck : ( board:number[], history:ActualMove[], colour: number, legalMoves?: legalMove[] ) => boolean = ( board, history, colour, legalMoves ) => {\n\n    //Determine the king's square\n\n    let wKing = board.indexOf( Piece.King );\n    let bKing = board.indexOf( -Piece.King );\n\n    if ( wKing === -1 || bKing === -1) return false;\n\n    let pos = colour > 0 ? wKing : bKing;\n\n    if (!legalMoves) legalMoves = Board.getLegalMoves(\n        board, history, { mode: \"captures\", colour: -colour } )\n\n    //Are there any attacks on the king?\n    return legalMoves.filter( move => move.to === pos ).length > 0;\n\n}\n\nconst filterCardMoves : ( g:Game, id:string, targets:number[], colour:number)=>boolean = ( g, id, targets, colour) => {\n\n    let _g = new Game( g.getBoard(), getActualMoves(g.getMoves()), g.getWhiteDeck(), g.getBlackDeck() )\n    g.getCurrentOngoingEffects().forEach(\n        e => _g.addOngoingEffect( new OngoingEffect( e.getSquare(), e.getName(), e.getDurationRemaining(), \"\", e.getTarget() ) )\n    )\n\n    let stillInCheck = false;\n    let card = ALL_CARDS[id];\n    if (targets.length === card.targets) {\n        //WE HAVE ENOUGH TARGETS ALREADY\n        _g.PlayCard( ALL_CARDS[id], targets );\n        stillInCheck = isCheck( _g.getBoard(), getActualMoves(_g.getMoves()), colour );\n        _g.UnMove();\n    }\n    else {\n        //SEE IF THERE ARE ANY LEGAL TARGETS FOR THE SUBSEQUENT MOVE\n        let subsequentPossibleTargets = card.getValidTargets[0]( _g.getBoard(), colour, getActualMoves(_g.getMoves()), targets, _g.getCurrentOngoingEffects() );\n        let arePossibleMoves = subsequentPossibleTargets.reduce(( validTargets, current ) => {\n            return filterCardMoves( _g, id, [ ...targets, current ], colour ) || validTargets;\n        }, false)\n        stillInCheck = !arePossibleMoves\n    }\n    return !stillInCheck\n}\n\nconst filterLegalMoves : ( moves: legalMove[], board : number[], history:ActualMove[], colour : number, effects : OngoingEffect[] ) => legalMove[]\n    = ( moves, board, history, colour, effects ) => {\n\n    let game = new Game( board , history );\n    effects.forEach( effect => game.addOngoingEffect( new OngoingEffect( effect.getSquare(), effect.getName(), effect.getDurationRemaining(), effect.getToolTip(), effect.getTarget() ) ) );\n\n    let filtered = moves.filter( move => {\n\n        //ONGOING EFFECTS\n\n        // HALLOW SPELL\n        if ( effects.filter(e => e.getName() === \"no-captures\").filter( e => e.getSquare() === move.from && board[move.to] !== Piece.None ).length > 0 ) return false //trying to capture (cannot capture)\n        if ( effects.filter( e => e.getName() === \"no-captures\" ).filter( e => e.getSquare() === move.to && board[move.to] !== Piece.None ).length > 0 ) return false //is being captured (cannot be captured)\n\n        // REPENT SPELL\n        if ( effects.filter(e => e.getName() === \"no-moves\").filter( e => e.getSquare() === move.from ).length > 0 ) return false //trying to move (cannot move)\n\n        // OUST SPELL\n        let oustEffects = effects.filter(e => e.getName() === \"must-move\").filter( e => e.getSquare() !== move.from && sameColour( colour, board[e.getSquare()] ) )\n        if ( oustEffects.length > 0 ) {\n\n            //MAKE SURE THE PIECE CAN MAKE A LEGAL MOVE!\n            let piece = board[oustEffects[0].getSquare()];\n            let pieceObj = Piece.getPiece(piece);\n            if (pieceObj) {\n                let pieceMoves = pieceObj.getLegalMoves( oustEffects[0].getSquare(), board, \"all\", colour, history );\n                //WE WANT TO PREVENT A SCENARIO WHERE THE KING IS CHECKED USING THIS CARD\n                let pieceCanMove = pieceMoves.reduce(( validMoveExists, m ) => {\n                    if (validMoveExists) return true;\n                    game.Move( m.from, m.to, m.special );\n                    let stillInCheck = isCheck( game.getBoard(), game.getMoves().filter( mv => mv instanceof ActualMove ) as ActualMove[], colour );\n                    game.UnMove();\n                    return !stillInCheck || validMoveExists\n                }, false)\n                if (pieceCanMove) return false;\n            }\n        }\n\n        //THERE ARE SOME SPECIAL RULES FOR SPECIAL MOVES\n        if ( move.special === \"CASTLE\") {\n            if ( isCheck( game.getBoard(), history, colour ) ) return false; //Cannot castle out of check\n            let kingsRook = colour > 0 ? 7 : 63;\n            let queensRook = colour > 0 ? 0 : 56;\n            if ( move.to === kingsRook - 1 && Board.isThreatened( kingsRook - 2, game.getBoard(), history, -colour )) return false;\n            if ( move.to === queensRook + 2 && Board.isThreatened( queensRook + 3, game.getBoard(), history, -colour ) ) return false;\n        }\n\n        //First, let's make the move.\n        game.Move( move.from, move.to, move.special );\n        //Now, let's see if there is a check.\n        let stillInCheck = isCheck( game.getBoard(), game.getMoves().filter( m => m instanceof ActualMove ) as ActualMove[], colour );\n        //Then, we unmake the move.\n        game.UnMove();\n        return !stillInCheck;\n    } )\n\n    return filtered\n\n}\n\nexport {\n    isCheck,\n    filterLegalMoves,\n    filterCardMoves\n}\n\n","import Piece from \"../Classes/Piece\";\n\nconst adjacentSquares = ( i: number, corners: boolean = true ) => {\n    let adj = [] as number[];\n    let r = Piece.getRank(i), f = Piece.getFile(i);\n    if (r <= 6 ) {\n        adj.push(i + 8); /// ABOVE\n        if (corners) {\n            if (f >= 1) adj.push(i+7) //ABOVE-LEFT\n            if (f <= 6) adj.push(i+9) //ABOVE-RIGHT\n        }\n    }\n    if (r >= 1 ) { ///\n        adj.push(i - 8); /// BELOW\n        if (corners) {\n            if (f >= 1) adj.push(i-9) //BELOW-LEFT\n            if (f <= 6) adj.push(i-7) //BELOW-RIGHT\n        }\n    }\n    if (f >= 1) adj.push(i-1) //LEFT\n    if (f <= 6) adj.push(i+1);\n\n    return adj\n}\n\nexport {\n    adjacentSquares\n}","import {FILES, Move, SpecialMove} from \"../types\";\nimport Piece from \"./Piece\";\nimport GamePiece from \"../Pieces/GamePiece\";\nimport Pawn from \"../Pieces/FIDE/Pawn\";\nimport {AdditionalOptions} from \"./Game\";\n\nexport default class ActualMove {\n\n    public readonly from : number;\n    public readonly to : number;\n    public readonly moving : number;\n    public readonly captured : number;\n    public readonly specify : number;\n\n    public readonly special : SpecialMove | undefined\n    public readonly additional: Partial<AdditionalOptions>\n\n    public static NONE = 0;\n    public static RANK = 1;\n    public static FILE = 2;\n    public static BOTH = 3;\n\n    public getMoveName : () => string = () => {\n        //If there was no capture\n        if ( Piece.getPiece(this.moving) === null ) {\n            if (this.additional.isCardMove && this.special === \"PROMOTION\" && this.additional.promotionTo) {\n                return `${FILES[Piece.getFile(this.to)] + Piece.getRank(this.to)}+${Piece.getPiece(this.additional.promotionTo)?.shortName}`\n            }\n            return \"ERR\";\n        }\n        let mPiece = Piece.getPiece(this.moving) as GamePiece;\n\n        //Getting strings\n        let pieceName = mPiece.shortName === Pawn.shortName ? \"\" : mPiece.shortName;\n        let captureText = this.captured === Piece.None ? \"\" : \"x\";\n        let destination = Piece.getSquareName( this.to );\n        let specification = \"\";\n\n        if ( this.specify === ActualMove.FILE || this.specify === ActualMove.BOTH ) {\n            specification += FILES[Piece.getFile( this.from )];\n        }\n        if ( this.specify === ActualMove.RANK || this.specify === ActualMove.BOTH ) {\n            specification += Piece.getRank( this.from );\n        }\n\n        let promotionTo = this.additional && this.additional.promotionTo ? `=${Piece.getPiece(this.additional.promotionTo)?.shortName}` : \"\";\n\n        return `${ pieceName }${ specification }${ captureText }${ destination }${ promotionTo }`\n    }\n\n    constructor( _from : number, _to : number, _moving : number, _captured : number, _specify : number = ActualMove.NONE, _special?: SpecialMove, _additional: Partial<AdditionalOptions> = {}) {\n\n        this.from = _from;\n        this.to = _to;\n        this.moving = _moving;\n        this.captured = _captured;\n        this.specify = _specify;\n        this.special = _special;\n        this.additional = _additional;\n\n    }\n\n}","import {legalMove, Move} from \"../types\";\nimport Piece from \"./Piece\";\nimport ActualMove from \"./Move\";\n\nexport default class Board {\n\n    static getLegalMoves : ( board : number[], history : ActualMove[], options : Partial<LegalMoveOptions> ) => legalMove[] = ( board, history, options = {} ) => {\n\n        let fullOptions = Object.assign({\n            mode: \"all\", colour: 0, ignore: []\n        }, options) as LegalMoveOptions;\n\n        let moves = [] as legalMove[]\n\n        board.map( (piece, position) => [ piece, position ] )\n            .filter( piece => ( piece[0] > 0 && fullOptions.colour > 0 ) || ( piece[0] < 0 && fullOptions.colour < 0 ) )\n            .filter( ([ piece, position ]) => fullOptions.ignore.indexOf( position ) === -1 )\n            .forEach(( [ piece, position ] ) => {\n                if ( piece === Piece.None ) return;\n                let pieceObject = Piece.getPiece( piece );\n                if ( pieceObject === null ) return;\n                let pieceMoves = pieceObject.getLegalMoves( position, board, fullOptions.mode, fullOptions.colour, history );\n                moves.push( ...pieceMoves );\n        });\n\n        //Pushes each of the moves\n        return moves;\n\n    }\n\n    static isThreatened : ( position : number, board : number[], history : ActualMove[], colour : number ) => boolean = ( position, board, history, colour ) => {\n\n        //This will be used to determine if a given square is threatened.\n        return Board.getThreats( position, board, history, colour ).length > 0;\n\n    }\n\n    static getThreats : ( position : number, board : number[], history : ActualMove[], colour? : number ) => legalMove[] = ( position, board, history, colour = -board[position] ) => {\n        return Board.getLegalMoves(\n            board, history, { mode: \"all\", colour }\n        ).filter( move => move.to === position );\n    }\n\n}\n\ntype LegalMoveOptions = {\n    mode: \"all\" | \"captures\" |  \"moves\",\n    colour: number,\n    ignore: number[]\n}\n\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","\n\nexport default class OngoingEffect {\n\n    private affecting : number\n    private name: string\n    private initialDuration: number\n    private durationRemaining: number\n    private toolTip: string\n    private target: \"square\" | \"piece\"\n\n    public constructor(_affecting: number, _name: string, _duration: number, _toolTip: string, _target: \"square\" | \"piece\" = \"piece\") {\n        this.affecting = _affecting;\n        this.name = _name;\n        this.initialDuration = _duration;\n        this.durationRemaining = _duration;\n        this.toolTip = _toolTip;\n        this.target = _target;\n    }\n\n    public getSquare = () => this.affecting;\n    public getName = () => this.name;\n    public getInitialDuration = () => this.initialDuration;\n    public getDurationRemaining = () => this.durationRemaining;\n    public getToolTip = () => this.toolTip;\n    public getTarget = () => this.target;\n\n    public updateSquare = ( _square: number ) => this.affecting = _square;\n\n    public tickDownDuration = () => this.durationRemaining--;\n    public unTickDuration = () => this.durationRemaining++;\n\n}","import CardMove from \"../Classes/CardMove\";\nimport ActualMove from \"../Classes/Move\";\n\nconst getActualMoves = (moves : (ActualMove | CardMove)[] ) => moves.filter(m => m instanceof ActualMove ) as ActualMove[];\n\nconst getCardMoves = (moves: ( ActualMove | CardMove )[] ) => moves.filter(m => m instanceof CardMove ) as CardMove[];\n\nexport {\n    getActualMoves,\n    getCardMoves\n}","const randomFromList = <T>( list : T[] ) => list[Math.floor((Math.random()*list.length))]\n\nconst arraysAreEqual = <T>( a : T[], b : T[] ) => {\n    return a.map(( el, index ) => el === b[index]).reduce(( acc, next ) => acc && next, true);\n}\n\n\nexport {\n    randomFromList,\n    arraysAreEqual\n}","import Card from \"../Card\";\nimport Piece from \"../../Classes/Piece\";\nimport ActualMove from \"../../Classes/Move\";\nimport Game from \"../../Classes/Game\";\nimport {differentColours, sameColour} from \"../../helpers/DifferentColours\";\nimport {adjacentSquares} from \"../../helpers/Adjacency\";\nimport {FIDE_EXPANSION} from \"../Expansions\";\n\nexport default class Reposition_Card extends Card {\n\n    public readonly cardName = \"Reposition\";\n    public readonly description = \"Swap 2 adjacent friendly pieces\";\n\n    public readonly targets = 2; //Choose two pieces\n    public readonly fast = false;\n    public readonly cost = 8;\n\n    public readonly shortName = \"_Rpos\";\n    public static readonly id = \"reposition\";\n    public readonly id = Reposition_Card.id;\n    public readonly expac = FIDE_EXPANSION;\n\n    public readonly unMoveType = \"boardState\" as \"boardState\";\n\n    public getValidTargets = [( board: number[], colour:number, history:ActualMove[], previousTargets?:number[] ) => {\n        let validTargets : number[] = [];\n        if (!previousTargets || previousTargets.length === 0) board.forEach(( piece, index ) => { /// FIRST PIECE\n            if (piece !== Piece.None && sameColour(piece, colour)) {\n                /// MUST BE ADJACENT TO A FRIENDLY PIECE\n                if (adjacentSquares(index).filter( adj => sameColour(piece, board[adj]) ).length > 0) validTargets.push(index);\n            }\n        });\n        else board.forEach((piece, index) => {\n            if (piece !== Piece.None && sameColour(piece, colour)) {\n                if (adjacentSquares(previousTargets ? previousTargets[0] : index).indexOf(index) !== -1) validTargets.push(index);\n            }\n        })\n        return validTargets.filter(target => !previousTargets || previousTargets.length === 0 || previousTargets.indexOf(target) === -1);\n    }]\n\n    public playCard = ( targets: number[], game: Game ) => {\n        // let targetSquare = targets[0]; //Only have one target\n        let [ square1, square2 ] = targets;\n        game.updateGameBoard(board => {\n            let piece1 = board[square1], piece2 = board[square2];\n            board[square1] = piece2;\n            board[square2] = piece1;\n        })\n    }\n\n    public trackPiece = ( square: number, targets: number[] ) => {\n        if (targets.length === this.targets) {\n            let [target1, target2] = targets;\n            // If the square was either one of the squares we targeted, then we do this!\n            if (square === target1) return target2;\n            else if (square === target2) return target1;\n        }\n\n        return square;\n    }\n}","import Card from \"../Card\";\nimport Piece from \"../../Classes/Piece\";\nimport ActualMove from \"../../Classes/Move\";\nimport Game from \"../../Classes/Game\";\nimport {differentColours, sameColour} from \"../../helpers/DifferentColours\";\nimport {adjacentSquares} from \"../../helpers/Adjacency\";\nimport {CRUSADER_EXPANSION} from \"../Expansions\";\n\nexport default class Deception_Card extends Card {\n\n    public readonly cardName = \"Deception\";\n    public readonly description = \"Swap any 2 friendly pieces\";\n\n    public readonly targets = 2; //Simply choose a square\n    public readonly fast = false;\n    public readonly cost = 12;\n\n    public readonly shortName = \"_Dcep\";\n    public static readonly id = \"deception\";\n    public readonly id = Deception_Card.id;\n    public readonly expac = CRUSADER_EXPANSION;\n\n    public readonly unMoveType = \"boardState\" as \"boardState\";\n\n    public getValidTargets = [( board: number[], colour:number, history:ActualMove[], previousTargets?:number[] ) => {\n        let validTargets : number[] = [];\n        board.forEach(( piece, index ) => { /// FIRST PIECE\n            if (piece !== Piece.None && sameColour(piece, colour)) {\n                validTargets.push(index);\n            }\n        });\n        return validTargets.filter(target => !previousTargets || previousTargets.length === 0 || previousTargets.indexOf(target) === -1);\n    }]\n\n    public playCard = ( targets: number[], game: Game ) => {\n        // let targetSquare = targets[0]; //Only have one target\n        let [ square1, square2 ] = targets;\n        game.updateGameBoard(board => {\n            let piece1 = board[square1], piece2 = board[square2];\n            board[square1] = piece2;\n            board[square2] = piece1;\n        })\n    }\n\n    public trackPiece = ( square: number, targets: number[] ) => {\n        if (targets.length === this.targets) {\n            let [target1, target2] = targets;\n            // If the square was either one of the squares we targeted, then we do this!\n            if (square === target1) return target2;\n            else if (square === target2) return target1;\n        }\n\n        return square;\n    }\n}","import Card from \"../Card\";\nimport Piece from \"../../Classes/Piece\";\nimport ActualMove from \"../../Classes/Move\";\nimport Game from \"../../Classes/Game\";\nimport {differentColours, sameColour} from \"../../helpers/DifferentColours\";\nimport OngoingEffect from \"../../Classes/OngoingEffect\";\nimport {CRUSADER_EXPANSION} from \"../Expansions\";\n\nexport default class Oust_Card extends Card {\n\n    public readonly cardName = \"Oust\";\n    public readonly description = \"Choose a non-king enemy piece. Your opponent must move it next turn (if possible).\";\n\n    public readonly targets = 1; //Simply choose a square\n    public readonly fast = true;\n    public readonly cost = 3;\n\n    public readonly shortName = \"_Oust\";\n    public static readonly id = \"oust\";\n    public readonly id = Oust_Card.id;\n    public readonly expac = CRUSADER_EXPANSION;\n\n    public readonly unMoveType = \"boardState\" as \"boardState\";\n\n    public getValidTargets = [( board: number[], colour:number, history:ActualMove[], previousTargets?:number[] ) => {\n        let validTargets : number[] = [];\n        board.forEach(( piece, index ) => {\n            if (piece !== Piece.None && piece !== (-colour * Piece.King) && !sameColour(piece, colour)) validTargets.push(index)\n        });\n        return validTargets.filter(target => !previousTargets || previousTargets.length === 0 || previousTargets.indexOf(target) === -1);\n    }]\n\n    public playCard = ( targets: number[], game: Game ) => {\n        // let targetSquare = targets[0]; //Only have one target\n        const description = \"This piece is being ousted. It must be moved on its next turn (if possible).\"\n        targets.forEach( target => {\n            game.addOngoingEffect( new OngoingEffect( target, \"must-move\", 1, description )  )\n        } )\n    }\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import GamePiece from \"../GamePiece\";\nimport {Move, legalMove, tag} from \"../../types\";\nimport {getLegalRiderMoves, getLegalSingleMoves} from \"../../helpers/RiderMoves\";\nimport Piece from \"../../Classes/Piece\";\nimport ActualMove from \"../../Classes/Move\";\nimport { knightGrid } from \"../ValueGrids\";\n\nexport default class Knight extends GamePiece {\n\n    //eval\n    public materialValue = 3;\n    public engineValue = 320;\n    public valueGrid = knightGrid;\n    public evaluate = ( p : number ) => this.engineValue;\n\n    //naming & display\n    public shortName = Knight.shortName;\n    public longName = Knight.longName;\n    public static shortName = \"N\";\n    public  static longName = \"Knight\";\n\n\n    public movesDescription = \"Two squares in one direction, then one perpendicular, forming an L-shape.\";\n    public specialMoves = []\n    public notes = \"Can leap over pieces.\";\n    public categories = [ \"Minor\", \"Knight\", \"FIDE\" ] as tag[];\n\n    public getLegalMoves : ( position : number,  board : number[], mode : \"all\" | \"moves\" | \"captures\", colour : number) => legalMove[] = ( position, board, mode, colour = 1 ) => {\n        //Let's use this as a test for the legal rider moves\n\n        let moves = [] as legalMove[];\n        moves.push( ...getLegalSingleMoves(\n            board, position, Piece.Knight * colour, [\n                p => Piece.getFile(p) >= 2 ? p + 6 : p, p => Piece.getFile(p) >= 2 ? p - 10 : p,\n                p => Piece.getFile(p) <= 5 ? p + 10 : p, p => Piece.getFile(p) <= 5 ? p - 6 : p,\n                p => Piece.getFile(p) >= 1 ? p + 15 : p, p => Piece.getFile(p) <= 6 ? p - 15 : p,\n                p => Piece.getFile(p) <= 6 ? p + 17 : p, p => Piece.getFile(p) >= 1 ? p - 17 : p,\n            ], mode\n        ) )\n\n        return moves;\n\n    }\n\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import {Move, SpecialMove} from \"../types\";\nimport {generateFIDEBoard} from \"../helpers/BoardGenerators\";\nimport ActualMove from \"./Move\";\nimport CardMove from \"./CardMove\";\nimport Piece from \"./Piece\";\nimport Pawn from \"../Pieces/FIDE/Pawn\";\nimport Rook from \"../Pieces/FIDE/Rook\";\nimport Card from \"../Cards/Card\";\nimport ALL_CARDS, {TEST_HAND} from \"../Cards/Cards\";\nimport Expendable_Card from \"../Cards/FIDE/Expendable_Card\";\nimport {Deck, FIDEDECK} from \"../Presets/Decks\";\nimport {randomFromList} from \"../helpers/Utils\";\nimport OngoingEffect from \"./OngoingEffect\";\nimport {getActualMoves} from \"../helpers/MoveFilter\";\nimport GamePiece from \"../Pieces/GamePiece\";\n\nexport default class Game {\n\n    private readonly board : number[]\n\n    private currentTurn : number; //1 for white, -1 for black\n\n    private moves : ( ActualMove | CardMove )[]\n    private gameLength : number;\n\n    ///\n    /// PLAYER DECKS & HANDS\n    ///\n    private whiteHand : Card[];\n    private blackHand : Card[];\n    private readonly whiteDeck : Deck;\n    private readonly blackDeck : Deck;\n    private whiteCurrentDeck : Card[];\n    private blackCurrentDeck : Card[];\n\n    ///\n    /// ONGOING EFFECTS\n    ///\n    private ongoingEffects : OngoingEffect[]\n\n\n    public UnMove = () => {\n\n        //Let's roll back the most recent move!\n        let move = this.moves.pop();\n\n        //\n        /// IS THE MOVE IS A NORMAL MOVE, DO THE FOLLOWING\n        ///\n        if ( move instanceof ActualMove ) {\n            this.moves = [ ...this.moves ]\n            if ( move === undefined ) return;\n\n            let colour = move.moving > 0 ? 1 : -1;\n\n            //Let's replace any piece that was captured\n            if ( move.special !== \"EP\" ) {\n                this.board[move.to] = move.captured;\n                //Update piece indexes\n            }\n            this.board[ move.from ] = move.moving;\n            //Update piece indexes\n\n            //Any effects affecting the piece move with it\n            this.getCurrentOngoingEffects()\n                .filter(effect => effect.getSquare() === (move as ActualMove).to && effect.getTarget() === \"piece\")\n                .forEach(effect => effect.updateSquare((move as ActualMove).from))\n\n            switch ( move.special ) {\n                case \"EP\":\n                    this.board[ move.to ] = Piece.None;\n                    this.board[ move.to - 8 * colour ] = move.captured;\n                    break;\n                case \"PROMOTION\":\n                    //We should be able to attach the piece we want to promote to\n                    break;\n                case \"CASTLE\":\n                    //CASTLING RULES\n                    //We've already moved the king. Now, we want to move the rook.\n\n                    //If we were castling Queenside\n                    if ( move.from > move.to ) {\n                        let rookDistance = 0;\n                        if ( Math.abs(this.board[move.to + 1]) === Piece.Rook) {\n                            //CASTLING WITH A SIMPLE ROOK\n                            rookDistance = 2; //Rook is 2 after where the king moves to\n                        }\n                        else if ( Math.abs(this.board[move.to + 1]) === Piece.Bede) {\n                            rookDistance = 1; //Bede is only 1 after where the king moves to\n                        }\n                        let rookSquare = move.to - rookDistance;\n                        this.board[rookSquare] = this.board[ move.to + 1 ];\n                        this.board[ move.to + 1 ] = Piece.None;\n                        //Update pieceIndexes\n                    }\n                    //If we were castling Kingside\n                    if ( move.from < move.to ) {\n                        let rookSquare = move.to + 1;\n                        this.board[rookSquare] = this.board[ move.to - 1 ];\n                        this.board[ move.to - 1 ] = Piece.None;\n                    }\n\n                    break;\n                case undefined:\n                default:\n                    break;\n            }\n            if ( !move.additional.isCardMove ) {\n                this.undoEndOfTurnCheck();\n            }\n            else {\n                //IF WE JUST UN-MADE A CARD MOVE\n                //Repeat\n                this.UnMove();\n            }\n\n        }\n\n        ///\n        /// IF THE MOVE IS A CARD MOVE, DO THIS INSTEAD!\n        ///\n\n        if ( move instanceof CardMove ) {\n            //We want to roll back to what the board was before the card move\n            this.board.forEach((piece, position) => {\n                //If the piece has changed, then we update it\n                if ( piece !== (move as CardMove).boardBefore[position] ) {\n                    this.board[position] = (move as CardMove).boardBefore[position];\n                }\n                // If the piece didn't change, don't update it\n            })\n\n            //WE WANT TO RETURN THE CARD TO THE PLAYER'S HAND\n            let returnedCard = Object.assign({}, ALL_CARDS[move.cardName]);\n            returnedCard.regenerateUUID()\n            if ( this.currentTurn < 0 ) {\n                //Undoing a white card move (opposite because currentTurn not yet changed\n                this.whiteHand.push( returnedCard )\n            }\n            else {\n                this.blackHand.push( returnedCard )\n            }\n\n            //If the card we just un-did wasn't fast, then we change back the turn.\n            let card = ALL_CARDS[ move.cardName ];\n\n            //REMOVE ANY EFFECTS THAT HAVE JUST BEEN ADDED\n            let effectIndexesToRemove = [] as number[];\n            this.ongoingEffects.forEach((e, i) => {\n                if (e.getDurationRemaining() === e.getInitialDuration()) effectIndexesToRemove.push(i)\n            } )\n            this.ongoingEffects = this.ongoingEffects.filter((e, i) => effectIndexesToRemove.indexOf(i) === -1);\n\n            if ( card && !card.fast ) {\n                this.undoEndOfTurnCheck();\n            }\n        }\n\n    };\n\n    ///\n    /// MAKING A NORMAL CHESS MOVE\n    ///\n    public Move = ( from : number, to : number, special? : SpecialMove, additional: Partial<AdditionalOptions> = {}) => {\n        //Let's add the move function\n        //Keeping it simple for now, let's just make the move. Forcefully.\n\n        //Let's see if there is anything special we need to do\n        let colour = this.board[from] > 0 ? 1 : -1;\n        let specify = ActualMove.NONE;\n        let moving = this.board[from];\n        let captured = to === from ? Piece.None : this.board[to]; //Not capturing if moving to own square\n\n        if ( Math.abs( this.board[from] ) === Piece.Pawn && this.board[to] !== 0) {\n            specify = ActualMove.FILE\n        }\n\n        //WE ALSO WANT TO HANDLE SPECIAL MOVES\n        switch ( special ) {\n            case \"EP\":\n                captured = this.board[ to - 8 * colour ];\n                this.board[ to - 8 * colour ] = Piece.None;\n                //Remove from piece indexes\n                break;\n            case \"PROMOTION\":\n                //We should have the piece attached\n                if ( additional.hasOwnProperty(\"promotionTo\") && additional.promotionTo !== undefined ) {\n                    let { promotionTo } = additional;\n                    //Now, we just replace the piece with the one we want to promote to!\n                    this.board[ from ] = promotionTo;\n                }\n                break;\n            case \"CASTLE\":\n                //CASTLING RULES\n                //We've already moved the king. Now, we want to move the rook.\n\n                //If we're castling Queenside\n                if ( from > to ) {\n                    let rookSquare = to;\n                    if ( Math.abs(this.board[ to - 2 ]) === Piece.Rook && this.board[ to - 1 ] === Piece.None ) {\n                        //CASTLING WITH A SIMPLE ROOK\n                        rookSquare -= 2; //Rook is 2 after where the king moves to\n                    }\n                    else if ( Math.abs(this.board[to - 1]) === Piece.Bede) {\n                        rookSquare -= 1; //Bede is only 1 after where the king moves to\n                    }\n                    this.board[ to + 1 ] = this.board[rookSquare];\n                    this.board[rookSquare] = Piece.None;\n                    //Update piece indexes\n                }\n                //If we're castling Kingside\n                if ( from < to ) {\n                    let rookSquare = to + 1;\n                    this.board[ to - 1 ] = this.board[rookSquare];\n                    this.board[rookSquare] = Piece.None;\n                    //Update piece indexes\n                }\n\n                break;\n            case undefined:\n            default:\n                break;\n        }\n\n        this.moves.push( new ActualMove( from, to, moving, captured, specify, special, additional) );\n\n        //Let's move the piece on To to From.\n        this.board[to] = this.board[from];\n        if (to !== from) this.board[from] = Piece.None;\n\n        //Any effects affecting the piece move with it\n        this.getCurrentOngoingEffects().filter(effect => effect.getSquare() === from && effect.getTarget() === \"piece\")\n            .forEach(effect => {\n                effect.updateSquare(to);\n            })\n\n        if ( !additional.isCardMove ) {\n            this.endOfTurnCheck();\n        }\n\n    }\n\n    private endOfTurnCheck = () => {\n        if (this.currentTurn < 0) {\n            this.gameLength++ //If made a black move, incrementing game length (turn number)\n        }\n        this.currentTurn = -this.currentTurn;\n        this.checkForCardDraw();\n        this.ongoingEffects.forEach( e => e.tickDownDuration() )\n    }\n\n    private undoEndOfTurnCheck = () => {\n        if (this.currentTurn > 0) {\n            this.gameLength--; //If un-making a white move, reduce the game length counter\n        }\n        this.currentTurn = -this.currentTurn;\n        this.checkForUndoCardDraw()\n        this.ongoingEffects.forEach((e, i) => {\n            e.unTickDuration();\n        } )\n\n    }\n\n    private checkForCardDraw = () => {\n        if (this.gameLength % 3 === 0 && this.currentTurn > 0) {\n            if ( this.whiteCurrentDeck.length > 0 ) this.DrawCard(1);\n            if ( this.blackCurrentDeck.length > 0 ) this.DrawCard(-1);\n        }\n    }\n    private checkForUndoCardDraw = () => {\n        if ((this.gameLength+1) % 3 === 0 && this.currentTurn < 0 && this.whiteHand.length > 0 && this.blackHand.length > 0) {\n            let whiteCard = this.whiteHand.pop() as Card;\n            let blackCard = this.blackHand.pop() as Card;\n            this.whiteCurrentDeck.push(whiteCard);\n            this.blackCurrentDeck.push(blackCard);\n        }\n    }\n\n    ///\n    /// PLAYING A CARD\n    ///\n    public PlayCard = ( card: Card, targets: number[] ) => {\n\n        if ( !card ) {\n            console.log(\"Tried to play a card that does not exist!\");\n            return;\n        }\n\n        if (targets.length !== card.targets) {\n            console.log(\"Tried to play a card with the improper amount of targets\");\n            return;\n        }\n\n        //\n        // CARD FUNCTIONALITY WORKS VIA CALLBACKS, SO WE USE THE CALLBACK!\n        //\n\n        // Save the board state\n        let boardBefore = [ ...this.board ];\n\n        //Now we create the card move\n        let cardMove = new CardMove( card.id, boardBefore, targets );\n        this.moves.push( cardMove );\n\n        card.playCard( targets, this );\n\n        ///\n        /// NOW, WE REMOVE THE CARD FROM THE PLAYER'S HAND\n        ///\n\n        if (this.currentTurn > 0) {\n            let removalIndex = this.whiteHand.map(c => c.getUUID()).indexOf(card.getUUID());\n            this.whiteHand = this.whiteHand.filter((c, i) => i !== removalIndex);\n        }\n        else {\n            let removalIndex = this.blackHand.map(c => c.getUUID()).indexOf(card.getUUID());\n            this.blackHand = this.blackHand.filter((c, i) => i !== removalIndex);\n        }\n\n\n        //Now, we change the current turn - IF the card was fast.\n        if ( !card.fast ) {\n            this.endOfTurnCheck();\n        }\n\n    }\n\n    ///\n    /// DRAWING CARDS\n    ///\n    public DrawCard = ( colour: number, quantity: number = 1 ) => {\n        if ( colour > 0 ) {\n            //Drawn for white\n            for (let i = 0; i < quantity; i++) {\n                let drawn = Number.parseInt(randomFromList( Object.keys(this.whiteCurrentDeck) ));\n                this.whiteHand.push( this.whiteCurrentDeck[drawn] );\n                this.whiteCurrentDeck = this.whiteCurrentDeck.filter((c, i) => i !== drawn);\n            }\n        }\n        else {\n            //Drawn for black\n            for (let i = 0; i < quantity; i++) {\n                let drawn = Number.parseInt(randomFromList( Object.keys(this.blackCurrentDeck) ));\n                this.blackHand.push( this.blackCurrentDeck[drawn] );\n                this.blackCurrentDeck = this.blackCurrentDeck.filter((c, i) => i !== drawn);\n            }\n        }\n    }\n\n\n    constructor( _board : number[] = generateFIDEBoard(), _history : ActualMove[] = [], _whiteDeck: Deck = FIDEDECK, _blackDeck: Deck = FIDEDECK  ) {\n        this.board = [..._board]\n        this.moves = _history;\n        this.currentTurn = 1;\n        this.gameLength = 1;\n\n\n        this.whiteHand = [];\n        this.blackHand = [];\n        this.whiteDeck = _whiteDeck;\n        this.blackDeck = _blackDeck;\n        this.whiteCurrentDeck = this.whiteDeck.cards.map(c => {\n            let _c = Object.assign({}, ALL_CARDS[c]);\n            _c.regenerateUUID();\n            return _c;\n        });\n        this.blackCurrentDeck = this.blackDeck.cards.map(c => {\n            let _c = Object.assign({}, ALL_CARDS[c]);\n            _c.regenerateUUID();\n            return _c;\n        });\n\n        //DRAWING THE INITIAL CARDS\n        this.DrawCard(1, 2); //Draw 2 cards for white\n        this.DrawCard(-1, 3); //Draw 3 cards for black\n\n        // this.whiteHand = TEST_HAND;\n        // this.blackHand = TEST_HAND;\n\n\n        this.whiteHand = this.whiteHand.map(c => {\n            let _c = Object.assign({}, c);\n            _c.regenerateUUID();\n            return _c;\n        });\n        this.blackHand = this.blackHand.map(c => {\n            let _c = Object.assign({}, c);\n            _c.regenerateUUID();\n            return _c;\n        });\n\n        //ONGOING EFFECTS\n        this.ongoingEffects = [];\n\n        // FOR DEVELOPMENT PURPOSES\n        if (global.window) {\n            (global.window as any).updateBoard = (update: (board: number[]) => number[]) => update(this.board).map((p, i) => this.board[i] = p);\n            (global.window as any).ADD_CARD_TO_HAND = ( id: string ) => {\n                if (ALL_CARDS[id]) {\n                    if (this.currentTurn > 0) this.whiteHand.push( ALL_CARDS[id] )\n                    else this.blackHand.push( ALL_CARDS[id] );\n                }\n            }\n        }\n\n\n    }\n\n    public getBoard = () => this.board;\n    public getMoves = () => this.moves;\n    public getCurrentTurn = () => this.currentTurn;\n\n    public getWhiteHand = () => this.whiteHand;\n    public getBlackHand = () => this.blackHand;\n    public getCurrentPlayerHand = () => this.currentTurn > 0 ? this.whiteHand : this.blackHand;\n\n    public getChaosScore = () => getActualMoves(this.moves)\n        .reduce(( chaosScore, m ) => Piece.getPiece(m.captured) ? chaosScore + (Piece.getPiece(m.captured) as GamePiece).materialValue : chaosScore, 0)\n\n    public getWhiteCurrentDeck = () => this.whiteCurrentDeck;\n    public getBlackCurrentDeck = () => this.blackCurrentDeck;\n    public getWhiteDeck = () => this.whiteDeck;\n    public getBlackDeck = () => this.blackDeck;\n    public getCurrentPlayerCurrentDeck = () => this.currentTurn > 0 ? this.whiteCurrentDeck : this.blackCurrentDeck;\n    public getNonCurrentPlayerCurrentDeck = () => this.currentTurn > 0 ? this.blackCurrentDeck : this.whiteCurrentDeck;\n\n    public getOngoingEffects = () => this.ongoingEffects;\n    public getCurrentOngoingEffects = () => this.ongoingEffects.filter(e => e.getDurationRemaining() >= 0);\n    public addOngoingEffect = ( effect: OngoingEffect ) => this.ongoingEffects.push(effect);\n\n    public getLastMove = () => this.moves.length > 0 ? this.moves[ this.moves.length - 1 ] : undefined;\n\n    public dangerouslySetCurrentTurn = ( turn: number ) => this.currentTurn = turn;\n\n    // These are to be used when playing online - each client acts as a source of authority on its own hand and deck.\n    public setWhiteHand = ( cb:(wh:Card[])=>Card[] ) => this.whiteHand = cb(this.whiteHand);\n    public setBlackHand = ( cb:(bh:Card[])=>Card[] ) => this.blackHand = cb(this.blackHand);\n\n    ///\n    /// FOR PLAYING CARDS\n    /// We want to be able to directly access the game board, so we'll do this\n    ///\n\n    public updateGameBoard : ( callback : ( board: number[] ) => void ) => void = ( callback : (board:number[]) => void ) => callback( this.board );\n\n}\n\nexport interface AdditionalOptions {\n    promotionTo : number,\n    isCardMove: boolean\n}","import Card from \"../Card\";\nimport Piece from \"../../Classes/Piece\";\nimport ActualMove from \"../../Classes/Move\";\nimport Game from \"../../Classes/Game\";\nimport {differentColours, sameColour} from \"../../helpers/DifferentColours\";\nimport {adjacentSquares} from \"../../helpers/Adjacency\";\nimport {FIDE_EXPANSION} from \"../Expansions\";\n\nexport default class Expendable_Card extends Card {\n\n    public readonly cardName = \"Expendable\";\n    public readonly description = \"Summon a pawn adjacent to a friendly piece.\";\n\n    public readonly targets = 1; //Simply choose a square\n    public readonly fast = false;\n    public readonly cost = 4;\n\n    public readonly shortName = \"_Expd\";\n    public static readonly id = \"expendable\";\n    public readonly id = Expendable_Card.id;\n    public readonly expac = FIDE_EXPANSION;\n\n    public readonly unMoveType = \"boardState\" as \"boardState\";\n\n    public getValidTargets = [( board: number[], colour:number, history:ActualMove[], previousTargets?:number[] ) => {\n        let validTargets : number[] = [];\n        board.forEach(( piece, index ) => {\n            if (piece === Piece.None) {\n                if (adjacentSquares(index).filter( adj => sameColour(colour, board[adj]) ).length > 0) validTargets.push(index);\n            }\n        });\n        return validTargets.filter(target => !previousTargets || previousTargets.length === 0 || previousTargets.indexOf(target) === -1);\n    }]\n\n    public playCard = ( targets: number[], game: Game ) => {\n        // let targetSquare = targets[0]; //Only have one target\n        // game.updateGameBoard( board => {\n        //     //board[targetSquare] = Piece.Pawn * game.getCurrentTurn() > 0 ? 1 : -1\n        //     targets.forEach(target => {\n        //         board[target] = Piece.Pawn * game.getCurrentTurn() > 0 ? 1 : -1\n        //     })\n        // });\n        targets.forEach( targetSquare => {\n            game.Move(targetSquare, targetSquare, \"PROMOTION\", {isCardMove: true, promotionTo: Piece.Pawn * game.getCurrentTurn()})\n        } )\n    }\n}","import Card from \"../Card\";\nimport Piece from \"../../Classes/Piece\";\nimport ActualMove from \"../../Classes/Move\";\nimport Game from \"../../Classes/Game\";\nimport {differentColours, sameColour} from \"../../helpers/DifferentColours\";\nimport {FIDE_EXPANSION} from \"../Expansions\";\n\nexport default class Advance_Card extends Card {\n\n    public readonly cardName = \"Advance\";\n    public readonly description = \"Move 2 pawns forward one.\";\n\n    public readonly targets = 2; //Simply choose a square\n    public readonly fast = false;\n    public readonly cost = 0;\n\n    public readonly shortName = \"_Advn\";\n    public static readonly id = \"advance\";\n    public readonly id = Advance_Card.id;\n    public readonly expac = FIDE_EXPANSION;\n\n    public readonly unMoveType = \"boardState\" as \"boardState\";\n\n    public getValidTargets = [( board: number[], colour:number, history:ActualMove[], previousTargets?:number[] ) => {\n        let validTargets : number[] = [];\n        board.forEach(( piece, index ) => {\n            if (piece === Piece.Pawn * colour && Piece.getRank(index) !== ( colour > 0 ? 7 : 0 )\n                && board[index + (8*colour)] === Piece.None) validTargets.push(index);\n        });\n        return validTargets.filter(target => !previousTargets || previousTargets.length === 0 || previousTargets.indexOf(target) === -1);\n    }]\n\n    public playCard = ( targets: number[], game: Game ) => {\n        // let targetSquare = targets[0]; //Only have one target\n        targets.forEach( target => {\n            game.Move(target, target + (8 * game.getCurrentTurn()), undefined, {isCardMove: true})\n        } )\n    }\n}","import Card from \"../Card\";\nimport Piece from \"../../Classes/Piece\";\nimport ActualMove from \"../../Classes/Move\";\nimport Game from \"../../Classes/Game\";\nimport {differentColours, sameColour} from \"../../helpers/DifferentColours\";\nimport {FIDE_EXPANSION} from \"../Expansions\";\n\nexport default class TacticalRetreat_Card extends Card {\n\n    public readonly cardName = \"Tactical Retreat\";\n    public readonly description = \"Move a piece back 2 squares.\";\n\n    public readonly targets = 1; //Simply choose a square\n    public readonly fast = true;\n    public readonly cost = 5;\n\n    public readonly shortName = \"_Tcrt \";\n    public static readonly id = \"tactical-retreat\";\n    public readonly id = TacticalRetreat_Card.id;\n    public readonly expac = FIDE_EXPANSION;\n\n    public readonly unMoveType = \"boardState\" as \"boardState\";\n\n    public getValidTargets = [( board: number[], colour:number, history:ActualMove[], previousTargets?:number[] ) => {\n        let validTargets : number[] = [];\n        board.forEach(( piece, index ) => {\n            if ( sameColour( piece, colour )\n                && ( (colour > 0 && Piece.getRank(index) >= 2) || (colour < 0 && Piece.getRank(index) <=5) )\n                && board[index - (8*colour)] === Piece.None\n                && board[index - (16*colour)] === Piece.None ) validTargets.push(index);\n        });\n        return validTargets.filter(target => !previousTargets || previousTargets.length === 0 || previousTargets.indexOf(target) === -1);\n    }]\n\n    public playCard = ( targets: number[], game: Game ) => {\n        // let targetSquare = targets[0]; //Only have one target\n        targets.forEach( target => {\n            game.Move(target, target - (16 * game.getCurrentTurn()), undefined, {isCardMove: true})\n        } )\n    }\n}","import Card from \"../Card\";\nimport Piece from \"../../Classes/Piece\";\nimport ActualMove from \"../../Classes/Move\";\nimport Game from \"../../Classes/Game\";\nimport {differentColours, sameColour} from \"../../helpers/DifferentColours\";\nimport {FIDE_EXPANSION} from \"../Expansions\";\n\nexport default class Mount_Card extends Card {\n\n    public readonly cardName = \"Mount\";\n    public readonly description = \"A friendly pawn promotes into a knight.\";\n\n    public readonly targets = 1; //Simply choose a square\n    public readonly fast = false;\n    public readonly cost = 10;\n\n    public readonly shortName = \"_Moun\";\n    public static readonly id = \"mount\";\n    public readonly id = Mount_Card.id;\n    public readonly expac = FIDE_EXPANSION;\n\n    public readonly unMoveType = \"boardState\" as \"boardState\";\n\n    public getValidTargets = [( board: number[], colour:number, history:ActualMove[], previousTargets?:number[] ) => {\n        let validTargets : number[] = [];\n        board.forEach(( piece, index ) => {\n            if (piece === Piece.Pawn * colour) validTargets.push(index);\n        });\n        return validTargets.filter(target => !previousTargets || previousTargets.length === 0 || previousTargets.indexOf(target) === -1);\n    }]\n\n    public playCard = ( targets: number[], game: Game ) => {\n        // let targetSquare = targets[0]; //Only have one target\n        targets.forEach( target => {\n            game.Move(target, target, \"PROMOTION\", {isCardMove: true, promotionTo: Piece.Knight * game.getCurrentTurn()})\n        } )\n    }\n}","import Card from \"../Card\";\nimport Piece from \"../../Classes/Piece\";\nimport ActualMove from \"../../Classes/Move\";\nimport Game from \"../../Classes/Game\";\nimport {differentColours, sameColour} from \"../../helpers/DifferentColours\";\nimport {adjacentSquares} from \"../../helpers/Adjacency\";\nimport {CRUSADER_EXPANSION} from \"../Expansions\";\n\nexport default class Adjust_Card extends Card {\n\n    public readonly cardName = \"Adjust\";\n    public readonly description = \"A piece makes one move rookwise\";\n\n    public readonly targets = 2;\n    public readonly fast = false;\n    public readonly cost = 0;\n\n    public readonly shortName = \"_Adjs\";\n    public static readonly id = \"adjust\";\n    public readonly id = Adjust_Card.id;\n    public readonly expac = CRUSADER_EXPANSION;\n\n    public readonly unMoveType = \"boardState\" as \"boardState\";\n\n    public getValidTargets = [( board: number[], colour:number, history:ActualMove[], previousTargets?:number[] ) => {\n        let validTargets : number[] = [];\n        if (previousTargets && previousTargets[0]) { //Making the follow up move\n            let prevSquare = previousTargets[0];\n            adjacentSquares(prevSquare, false).forEach(square => {\n                if (board[square] === Piece.None) validTargets.push(square);\n            })\n        }\n        else { //IF THE FIRST ONE\n            board.forEach(( piece, index ) => {\n                if ( sameColour( piece, colour ) ) {\n                    if ( adjacentSquares(index, false).filter(adjSq => board[adjSq] === Piece.None).length > 0 ) validTargets.push(index);\n                }\n            });\n        }\n        return validTargets;\n    }]\n\n    public playCard = ( targets: number[], game: Game ) => {\n        let [ from, to ] = targets;\n        game.Move( from, to, undefined, {isCardMove: true} )\n    }\n}","import Card from \"../Card\";\nimport Piece from \"../../Classes/Piece\";\nimport ActualMove from \"../../Classes/Move\";\nimport Game from \"../../Classes/Game\";\nimport {differentColours, sameColour} from \"../../helpers/DifferentColours\";\nimport {adjacentSquares} from \"../../helpers/Adjacency\";\nimport {CRUSADER_EXPANSION} from \"../Expansions\";\n\nexport default class Inquisition_Card extends Card {\n\n    public readonly cardName = \"Inquisition\";\n    public readonly description = \"A pawn moves forward 2\";\n\n    public readonly targets = 1;\n    public readonly fast = false;\n    public readonly cost = 0;\n\n    public readonly shortName = \"_Inqu\";\n    public static readonly id = \"inquisition\";\n    public readonly id = Inquisition_Card.id;\n    public readonly expac = CRUSADER_EXPANSION;\n\n    public readonly unMoveType = \"boardState\" as \"boardState\";\n\n    public getValidTargets = [( board: number[], colour:number, history:ActualMove[], previousTargets?:number[] ) => {\n        let validTargets : number[] = [];\n        board.forEach(( piece, index ) => {\n            if ( piece === Piece.Pawn * colour && board[index + ( 16 * colour )] === Piece.None ) validTargets.push(index);\n        })\n        return validTargets;\n    }]\n\n    public playCard = ( targets: number[], game: Game ) => {\n        let [ target ] = targets;\n        let colour = game.getCurrentTurn();\n        game.Move( target, target + (16 * colour), \"DOUBLE\", {isCardMove: true} )\n    }\n}","import Card from \"../Card\";\nimport Piece from \"../../Classes/Piece\";\nimport ActualMove from \"../../Classes/Move\";\nimport Game from \"../../Classes/Game\";\nimport {differentColours, sameColour} from \"../../helpers/DifferentColours\";\nimport OngoingEffect from \"../../Classes/OngoingEffect\";\nimport {CRUSADER_EXPANSION} from \"../Expansions\";\n\nexport default class Hallow_Card extends Card {\n\n    public readonly cardName = \"Hallow\";\n    public readonly description = \"A non-king piece cannot capture or be captured for 1 turn.\";\n\n    public readonly targets = 1; //Simply choose a square\n    public readonly fast = true;\n    public readonly cost = 2;\n\n    public readonly shortName = \"_Hlow\";\n    public static readonly id = \"hallow\";\n    public readonly id = Hallow_Card.id;\n    public readonly expac = CRUSADER_EXPANSION;\n\n    public readonly unMoveType = \"boardState\" as \"boardState\";\n\n    public getValidTargets = [( board: number[], colour:number, history:ActualMove[], previousTargets?:number[] ) => {\n        let validTargets : number[] = [];\n        board.forEach(( piece, index ) => {\n            if (piece !== Piece.None && Math.abs(piece) !== Piece.King ) validTargets.push(index)\n        });\n        return validTargets.filter(target => !previousTargets || previousTargets.length === 0 || previousTargets.indexOf(target) === -1);\n    }]\n\n    public playCard = ( targets: number[], game: Game ) => {\n        // let targetSquare = targets[0]; //Only have one target\n        const description = \"This piece has been hallowed, and cannot capture or be captured.\"\n        targets.forEach( target => {\n            game.addOngoingEffect( new OngoingEffect( target, \"no-captures\", 1, description )  )\n        } )\n    }\n}","import Card from \"../Card\";\nimport Piece from \"../../Classes/Piece\";\nimport ActualMove from \"../../Classes/Move\";\nimport Game from \"../../Classes/Game\";\nimport {differentColours, sameColour} from \"../../helpers/DifferentColours\";\nimport OngoingEffect from \"../../Classes/OngoingEffect\";\nimport {CRUSADER_EXPANSION} from \"../Expansions\";\n\nexport default class Repent_Card extends Card {\n\n    public readonly cardName = \"Repent\";\n    public readonly description = \"Choose a non-king enemy piece. Your opponent cannot move it next turn.\";\n\n    public readonly targets = 1; //Simply choose a square\n    public readonly fast = true;\n    public readonly cost = 2;\n\n    public readonly shortName = \"_Rpnt\";\n    public static readonly id = \"repent\";\n    public readonly id = Repent_Card.id;\n    public readonly expac = CRUSADER_EXPANSION;\n\n    public readonly unMoveType = \"boardState\" as \"boardState\";\n\n    public getValidTargets = [( board: number[], colour:number, history:ActualMove[], previousTargets?:number[] ) => {\n        let validTargets : number[] = [];\n        board.forEach(( piece, index ) => {\n            if (piece !== Piece.None && piece !== (-colour * Piece.King) && !sameColour(piece, colour)) validTargets.push(index)\n        });\n        return validTargets.filter(target => !previousTargets || previousTargets.length === 0 || previousTargets.indexOf(target) === -1);\n    }]\n\n    public playCard = ( targets: number[], game: Game ) => {\n        // let targetSquare = targets[0]; //Only have one target\n        const description = \"This piece is repenting. It cannot be moved normally (Can still be moved by cards).\"\n        targets.forEach( target => {\n            game.addOngoingEffect( new OngoingEffect( target, \"no-moves\", 1, description )  )\n        } )\n    }\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export type Colour = \"white\" | \"black\"\n\nexport type PieceCategory = \"pawn\" | \"knight\" | \"bishop\" | \"rook\" | \"queen\" | \"king\"\n\nexport type SquareFile = \"a\" | \"b\" | \"c\" | \"d\" | \"e\" | \"f\" | \"g\" | \"h\"\n\nexport interface Move {\n    from : number,\n    to : number,\n    piece : number\n}\n\nexport const FILES = [ \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\" ]\n\n\nexport interface legalMove {\n    to : number,\n    from : number,\n    special? : SpecialMove\n}\n\nexport type SpecialMove =  \"EP\" | \"PROMOTION\" | \"CASTLE\" | \"DOUBLE\"\n\nexport type tag = \"Major\" | \"Minor\" | \"Castler\" | \"Colour-bound\" | \"Knight\" | \"Bishop\" | \"Rook\" | \"Queen\" | \"King\" | \"Pawn\" | \"FIDE\" | \"Crusader\" | \"Token\"\n\nexport interface GameInfo {\n    uuid: string,\n    opponent: \"LOCAL\" | \"COMP\" | \"ONLINE\",\n    army: string,\n    opponentArmy: string,\n    deck: string,\n    opponentDeck: string,\n    colour: 1 | -1\n}\n","import ALL_CARDS from \"../Cards/Cards\";\n\nexport default class CardMove {\n\n    public readonly cardName : string;\n\n    public readonly boardBefore : number[];\n\n    public readonly targets: number[];\n\n    public getMoveName : () => string = () => ALL_CARDS[ this.cardName ].shortName\n\n    constructor( _cardName : string, _boardBefore : number[], _targets: number[] ) {\n        this.cardName = _cardName;\n        this.boardBefore = _boardBefore;\n        this.targets = _targets;\n        if ( Object.keys(ALL_CARDS).indexOf(_cardName) === -1 ) {\n            console.log(\"Warning - creating a CardMove using a non-existant card!\")\n        }\n    }\n\n}","import Card from \"../Card\";\nimport Piece from \"../../Classes/Piece\";\nimport ActualMove from \"../../Classes/Move\";\nimport Game from \"../../Classes/Game\";\nimport {differentColours, sameColour} from \"../../helpers/DifferentColours\";\nimport {FIDE_EXPANSION} from \"../Expansions\";\n\nexport default class Demote_Card extends Card {\n\n    public readonly cardName = \"Demote\";\n    public readonly description = \"An opposing minor piece demotes to a pawn.\";\n\n    public readonly targets = 1; //Simply choose a square\n    public readonly fast = false;\n    public readonly cost = 12;\n\n    public readonly shortName = \"_Dmot\";\n    public static readonly id = \"demote\";\n    public readonly id = Demote_Card.id;\n    public readonly expac = FIDE_EXPANSION;\n\n    public readonly unMoveType = \"boardState\" as \"boardState\";\n\n    public getValidTargets = [( board: number[], colour:number, history:ActualMove[], previousTargets?:number[] ) => {\n        let validTargets : number[] = [];\n        board.forEach(( piece, index ) => {\n            if (Piece.getPiece(piece)?.categories.indexOf(\"Minor\") !== -1\n                && Piece.getPiece(piece)?.categories.indexOf(\"Pawn\") === -1\n                && differentColours(colour, piece)) validTargets.push(index);\n        });\n        return validTargets.filter(target => !previousTargets || previousTargets.length === 0 || previousTargets.indexOf(target) === -1);\n    }]\n\n    public playCard = ( targets: number[], game: Game ) => {\n        // let targetSquare = targets[0]; //Only have one target\n        targets.forEach( target => {\n            game.Move(target, target, \"PROMOTION\", {isCardMove: true, promotionTo: -Piece.Pawn * game.getCurrentTurn()})\n        } )\n    }\n}","import Card from \"../Card\";\nimport Piece from \"../../Classes/Piece\";\nimport ActualMove from \"../../Classes/Move\";\nimport Game from \"../../Classes/Game\";\nimport {differentColours, sameColour} from \"../../helpers/DifferentColours\";\nimport Bishop from \"../../Pieces/FIDE/Bishop\";\nimport Knight from \"../../Pieces/FIDE/Knight\";\nimport {FIDE_EXPANSION} from \"../Expansions\";\n\nexport default class Maneuver_Card extends Card {\n\n    public readonly cardName = \"Maneuver\";\n    public readonly description = \"A bishop makes a knight move.\";\n\n    public readonly targets = 2; //Simply choose a square\n    public readonly fast = false;\n    public readonly cost = 15;\n\n    public readonly shortName = \"_Mnvr\";\n    public static readonly id = \"maneuver\";\n    public readonly id = Maneuver_Card.id;\n    public readonly expac = FIDE_EXPANSION;\n\n    public readonly unMoveType = \"boardState\" as \"boardState\";\n\n    public getValidTargets = [( board: number[], colour:number, history:ActualMove[], previousTargets?:number[] ) => {\n        let validTargets : number[] = [];\n        if (!previousTargets || previousTargets.length === 0) board.forEach(( piece, index ) => {\n            if ( sameColour(piece, colour)\n                && Piece.getPiece(piece)?.categories.indexOf(\"Bishop\") !== -1 ) validTargets.push(index);\n        });\n        else {\n            let knightMoves = new Knight().getLegalMoves( previousTargets[0], board, \"moves\", colour );\n            board.forEach((piece, index) => {\n                if (knightMoves.filter(move => move.to === index).length > 0) validTargets.push(index);\n            })\n        }\n        return validTargets.filter(target => !previousTargets || previousTargets.length === 0 || previousTargets.indexOf(target) === -1);\n    }]\n\n    public playCard = ( targets: number[], game: Game ) => {\n        // let targetSquare = targets[0]; //Only have one target\n        let [ target, destination ] = targets;\n        game.Move( target, destination, undefined, { isCardMove: true } )\n    }\n}","import Card from \"../Card\";\nimport Piece from \"../../Classes/Piece\";\nimport ActualMove from \"../../Classes/Move\";\nimport Game from \"../../Classes/Game\";\nimport {differentColours, sameColour} from \"../../helpers/DifferentColours\";\nimport Bishop from \"../../Pieces/FIDE/Bishop\";\nimport Knight from \"../../Pieces/FIDE/Knight\";\nimport {adjacentSquares} from \"../../helpers/Adjacency\";\nimport {FIDE_EXPANSION} from \"../Expansions\";\n\nexport default class Flee_Card extends Card {\n\n    public readonly cardName = \"Flee\";\n    public readonly description = \"Your king moves to a square adjacent to a friendly piece.\";\n\n    public readonly targets = 2; //Simply choose a square\n    public readonly fast = false;\n    public readonly cost = 25;\n\n    public readonly shortName = \"_Flee\";\n    public static readonly id = \"flee\";\n    public readonly id = Flee_Card.id;\n    public readonly expac = FIDE_EXPANSION;\n\n    public readonly unMoveType = \"boardState\" as \"boardState\";\n\n    public getValidTargets = [( board: number[], colour:number, history:ActualMove[], previousTargets?:number[] ) => {\n        let validTargets : number[] = [];\n        if (!previousTargets || previousTargets.length === 0) board.forEach(( piece, index ) => {\n            if ( sameColour(piece, colour)\n                && Piece.getPiece(piece)?.categories.indexOf(\"King\") !== -1 ) validTargets.push(index);\n        });\n        else {\n            board.forEach(( piece, index ) => {\n                if (piece === Piece.None) {\n                    if (adjacentSquares(index).filter( adj => sameColour(colour, board[adj]) && Math.abs(board[adj]) !== Piece.King ).length > 0) validTargets.push(index);\n                }\n            });\n        }\n        return validTargets.filter(target => !previousTargets || previousTargets.length === 0 || previousTargets.indexOf(target) === -1);\n    }]\n\n    public playCard = ( targets: number[], game: Game ) => {\n        // let targetSquare = targets[0]; //Only have one target\n        let [ king, destination ] = targets;\n        game.Move( king, destination, undefined, { isCardMove: true } )\n    }\n}","import Card from \"../Card\";\nimport Piece from \"../../Classes/Piece\";\nimport ActualMove from \"../../Classes/Move\";\nimport Game from \"../../Classes/Game\";\nimport {differentColours, sameColour} from \"../../helpers/DifferentColours\";\nimport {getLegalRiderMoves} from \"../../helpers/RiderMoves\";\nimport {FIDE_EXPANSION} from \"../Expansions\";\n\nexport default class Promotion_Card extends Card {\n\n    public readonly cardName = \"Promotion\";\n    public readonly description = \"A friendly pawn advances as far up its file as possible. If it reaches the back rank, it becomes a Rook.\";\n\n    public readonly targets = 1; //Simply choose a square\n    public readonly fast = false;\n    public readonly cost = 30;\n\n    public readonly shortName = \"_Prmo\";\n    public static readonly id = \"promotion\";\n    public readonly id = Promotion_Card.id;\n    public readonly expac = FIDE_EXPANSION;\n\n    public readonly unMoveType = \"boardState\" as \"boardState\";\n\n    public getValidTargets = [( board: number[], colour:number, history:ActualMove[], previousTargets?:number[] ) => {\n        let validTargets : number[] = [];\n        board.forEach(( piece, index ) => {\n            if (piece === Piece.Pawn * colour && board[ index + ( 8 * colour ) ] === Piece.None ) validTargets.push(index);\n        });\n        return validTargets.filter(target => !previousTargets || previousTargets.length === 0 || previousTargets.indexOf(target) === -1);\n    }]\n\n    public playCard = ( targets: number[], game: Game ) => {\n        // let targetSquare = targets[0]; //Only have one target\n        targets.forEach( target => {\n            const rider = getLegalRiderMoves( game.getBoard(), target, game.getBoard()[target], [\n                p => p + ( 8 * game.getCurrentTurn() )\n            ], \"moves\" );\n            if (rider.length >= 1) { // If at least 1 rider move is generated (otherwise get an error in final.to\n                let final = rider[rider.length - 1];\n                if ( (Piece.getRank(final.to) === 7 && game.getCurrentTurn() > 0)\n                    || (Piece.getRank(final.to) === 0 && game.getCurrentTurn() < 0) ) {\n                    game.Move(target, final.to, \"PROMOTION\", {isCardMove: true, promotionTo: Piece.Rook * game.getCurrentTurn()})\n                }\n                else game.Move(target, final.to, undefined, {isCardMove: true})\n            }\n            else {\n                console.log(\"RIDER RETURNED 0 RIDER MOVES\");\n            }\n        } )\n    }\n}","import Card from \"../Card\";\nimport Piece from \"../../Classes/Piece\";\nimport ActualMove from \"../../Classes/Move\";\nimport Game from \"../../Classes/Game\";\nimport {differentColours, sameColour} from \"../../helpers/DifferentColours\";\nimport {adjacentSquares} from \"../../helpers/Adjacency\";\nimport {FIDE_EXPANSION} from \"../Expansions\";\n\nexport default class BattlePlan_Card extends Card {\n\n    public readonly cardName = \"Battle Plan\";\n    public readonly description = \"Draw 3 cards\";\n\n    public readonly targets = 1; //Drag literally anywhere to play it.\n    public readonly fast = false;\n    public readonly cost = 12;\n\n    public readonly shortName = \"_BPln\";\n    public static readonly id = \"battleplan\";\n    public readonly id = BattlePlan_Card.id;\n    public readonly expac = FIDE_EXPANSION;\n\n    public readonly unMoveType = \"boardState\" as \"boardState\";\n\n    public getValidTargets = [( board: number[], colour:number, history:ActualMove[], previousTargets?:number[] ) => {\n        let validTargets : number[] = [];\n        board.forEach((piece, index) => validTargets.push(index));\n        return validTargets;\n    }]\n\n    public playCard = ( targets: number[], game: Game ) => {\n        let currentCol = game.getCurrentTurn();\n        game.DrawCard(currentCol, 3)\n    }\n}","import Card from \"../Card\";\nimport Piece from \"../../Classes/Piece\";\nimport ActualMove from \"../../Classes/Move\";\nimport Game from \"../../Classes/Game\";\nimport {differentColours, sameColour} from \"../../helpers/DifferentColours\";\nimport {CRUSADER_EXPANSION} from \"../Expansions\";\n\nexport default class Anoint_Card extends Card {\n\n    public readonly cardName = \"Anoint\";\n    public readonly description = \"A friendly pawn promotes into a bishop.\";\n\n    public readonly targets = 1; //Simply choose a square\n    public readonly fast = false;\n    public readonly cost = 11;\n\n    public readonly shortName = \"_Anoi\";\n    public static readonly id = \"anonit\";\n    public readonly id = Anoint_Card.id;\n    public readonly expac = CRUSADER_EXPANSION;\n\n    public readonly unMoveType = \"boardState\" as \"boardState\";\n\n    public getValidTargets = [( board: number[], colour:number, history:ActualMove[], previousTargets?:number[] ) => {\n        let validTargets : number[] = [];\n        board.forEach(( piece, index ) => {\n            if (piece === Piece.Pawn * colour) validTargets.push(index);\n        });\n        return validTargets.filter(target => !previousTargets || previousTargets.length === 0 || previousTargets.indexOf(target) === -1);\n    }]\n\n    public playCard = ( targets: number[], game: Game ) => {\n        // let targetSquare = targets[0]; //Only have one target\n        targets.forEach( target => {\n            game.Move(target, target, \"PROMOTION\", {isCardMove: true, promotionTo: Piece.Bishop * game.getCurrentTurn()})\n        } )\n    }\n}","import Card from \"../Card\";\nimport Piece from \"../../Classes/Piece\";\nimport ActualMove from \"../../Classes/Move\";\nimport Game from \"../../Classes/Game\";\nimport {differentColours, sameColour} from \"../../helpers/DifferentColours\";\nimport {adjacentSquares} from \"../../helpers/Adjacency\";\nimport {CRUSADER_EXPANSION} from \"../Expansions\";\n\nexport default class Clergy_Card extends Card {\n\n    public readonly cardName = \"Clergy\";\n    public readonly description = \"Summon 2 pawns next to each other\";\n\n    public readonly targets = 2; //Simply choose a square\n    public readonly fast = false;\n    public readonly cost = 15;\n\n    public readonly shortName = \"_Clrg\";\n    public static readonly id = \"clergy\";\n    public readonly id = Clergy_Card.id;\n    public readonly expac = CRUSADER_EXPANSION;\n\n    public readonly unMoveType = \"boardState\" as \"boardState\";\n\n    public getValidTargets = [( board: number[], colour:number, history:ActualMove[], previousTargets?:number[] ) => {\n        let validTargets : number[] = [];\n        if (!previousTargets || previousTargets.length === 0) board.forEach(( piece, index ) => { /// FIRST PIECE\n            if (piece === Piece.None) {\n                /// MUST BE ADJACENT TO A FRIENDLY PIECE\n                if (adjacentSquares(index).filter( adj => sameColour(colour, board[adj]) ).length > 0) validTargets.push(index);\n            }\n        });\n        else board.forEach((piece, index) => {//Second Piece\n            if (piece === Piece.None) {\n                if (adjacentSquares(previousTargets ? previousTargets[0] : index).indexOf(index) !== -1) validTargets.push(index);\n            }\n        })\n        return validTargets.filter(target => !previousTargets || previousTargets.length === 0 || previousTargets.indexOf(target) === -1);\n    }]\n\n    public playCard = ( targets: number[], game: Game ) => {\n        // let targetSquare = targets[0]; //Only have one target\n        game.updateGameBoard( board => {\n            //board[targetSquare] = Piece.Pawn * game.getCurrentTurn() > 0 ? 1 : -1\n            targets.forEach(target => {\n                //board[target] = Piece.Pawn * game.getCurrentTurn() > 0 ? 1 : -1\n                game.Move(target, target, \"PROMOTION\", {isCardMove: true, promotionTo: Piece.Pawn * game.getCurrentTurn()})\n            })\n        });\n    }\n}","import Card from \"../Card\";\nimport Piece from \"../../Classes/Piece\";\nimport ActualMove from \"../../Classes/Move\";\nimport Game from \"../../Classes/Game\";\nimport {differentColours, sameColour} from \"../../helpers/DifferentColours\";\nimport {filterLegalMoves} from \"../../helpers/Checks\";\nimport GamePiece from \"../../Pieces/GamePiece\";\nimport OngoingEffect from \"../../Classes/OngoingEffect\";\nimport {CRUSADER_EXPANSION} from \"../Expansions\";\n\nexport default class Convert_Card extends Card {\n\n    public readonly cardName = \"Convert\";\n    public readonly description = \"Choose an enemy piece you can capture. You take control of it instead.\";\n\n    public readonly targets = 1; //Simply choose a square\n    public readonly fast = false;\n    public readonly cost = 18;\n\n    public readonly shortName = \"_Convt\";\n    public static readonly id = \"convert\";\n    public readonly id = Convert_Card.id;\n    public readonly expac = CRUSADER_EXPANSION;\n\n    public readonly unMoveType = \"boardState\" as \"boardState\";\n\n    public getValidTargets = [( board: number[], colour:number, history:ActualMove[], previousTargets?:number[], effects?:OngoingEffect[] ) => {\n        let validTargets : number[] = [];\n        board.forEach((piece, index) => {\n            if (sameColour(piece, colour)) {\n                if (Piece.getPiece(piece)) {\n                    filterLegalMoves(\n                        (Piece.getPiece(piece) as GamePiece).getLegalMoves(index, board, \"captures\", colour, history),\n                        board, history, colour, effects || ([] as OngoingEffect[])\n                    ).forEach((capture) => {\n                        validTargets.push(capture.to)\n                    })\n                }\n            }\n        })\n        return validTargets.filter(target => !previousTargets || previousTargets.length === 0 || previousTargets.indexOf(target) === -1);\n    }]\n\n    public playCard = ( targets: number[], game: Game ) => {\n        // let targetSquare = targets[0]; //Only have one target\n        game.updateGameBoard( board => {\n            targets.forEach(target => {\n                board[target] = -board[target];\n            })\n        } )\n    }\n}","import Card from \"../Card\";\nimport Piece from \"../../Classes/Piece\";\nimport ActualMove from \"../../Classes/Move\";\nimport Game from \"../../Classes/Game\";\nimport {sameColour} from \"../../helpers/DifferentColours\";\nimport {adjacentSquares} from \"../../helpers/Adjacency\";\nimport {CRUSADER_EXPANSION} from \"../Expansions\";\n\nexport default class Envoy_Card extends Card {\n\n    public readonly cardName = \"Envoy\";\n    public readonly description = \"Summon a dummy pawn that cannot capture or promote adjacent to a friendly piece\";\n\n    public readonly targets = 1; //Simply choose a square\n    public readonly fast = true;\n    public readonly cost = 5;\n\n    public readonly shortName = \"_Envy\";\n    public static readonly id = \"envoy\";\n    public readonly id = Envoy_Card.id;\n    public readonly expac = CRUSADER_EXPANSION;\n\n    public readonly unMoveType = \"boardState\" as \"boardState\";\n\n    public getValidTargets = [( board: number[], colour:number, history:ActualMove[], previousTargets?:number[] ) => {\n        let validTargets : number[] = [];\n        board.forEach(( piece, index ) => {\n            if (piece === Piece.None) {\n                if (adjacentSquares(index).filter( adj => sameColour(colour, board[adj]) ).length > 0) validTargets.push(index);\n            }\n        });\n        return validTargets.filter(target => !previousTargets || previousTargets.length === 0 || previousTargets.indexOf(target) === -1);\n    }]\n\n    public playCard = ( targets: number[], game: Game ) => {\n        game.updateGameBoard( board => {\n            targets.forEach(target => {\n                board[target] = Piece.DummyPawn * (game.getCurrentTurn() > 0 ? 1 : -1)\n            })\n        });\n    }\n}"," import GamePiece from \"../GamePiece\";\nimport {Move, legalMove, SpecialMove, tag} from \"../../types\";\nimport {getLegalRiderMoves, getLegalSingleMoves} from \"../../helpers/RiderMoves\";\nimport Piece from \"../../Classes/Piece\";\nimport ActualMove from \"../../Classes/Move\";\nimport { pawnGrid } from \"../ValueGrids\";\n\nexport default class Pawn extends GamePiece {\n\n    //eval\n    public materialValue = 1;\n    public engineValue = 100;\n    public valueGrid = pawnGrid;\n    public evaluate = ( p : number ) => this.engineValue;\n\n    //naming & display\n    public shortName = Pawn.shortName;\n    public longName = Pawn.longName;\n    public static shortName = \"P\";\n    public static longName = \"Pawn\";\n\n    public movesDescription = \"Moves one square directly forward, and captures one square diagonally forward.\"\n    public specialMoves = [\n        \"Can move two squares at once if on your second rank.\",\n        \"If an opposing pawn moves two squares at once, can capture that pawn by \\\"capturing\\\" the square it skipped over.\"\n    ]\n    public notes = \"Upon reaching the final rank, pawns can promote into another piece in the game.\"\n    public categories = [ \"Minor\", \"Pawn\" ] as tag[];\n\n    public getLegalMoves : ( position : number,  board : number[], mode : \"all\" | \"moves\" | \"captures\", colour : number, history : ActualMove[]) => legalMove[] = ( position, board, mode, colour = 1, history ) => {\n        //Let's use this as a test for the legal rider moves\n\n        let moves = [] as legalMove[]\n\n        // PAWN MOVES\n        if ( mode !== \"captures\" ) {\n            if ( Piece.getRank( position ) === 1 || Piece.getRank( position ) === 6 ) moves.push(...getLegalRiderMoves(\n                board, position, Piece.Pawn * colour, [\n                    p => colour > 0 ? p + 8 : p - 8\n                ], \"moves\", 2\n            ).map( m => Math.abs( m.from - m.to ) === 16 ? { ...m, special : \"DOUBLE\" as SpecialMove } : m ))\n            else moves.push(...getLegalSingleMoves(\n                board, position, Piece.Pawn * colour, [\n                    p => colour > 0 ? p + 8 : p - 8\n                ], \"moves\"\n            ))\n        }\n\n        // PAWN CAPTURES\n        if ( mode !== \"moves\" ) {\n            moves.push(...getLegalSingleMoves(\n                board, position, Piece.Pawn * colour, colour > 0 ? [\n                    p => Piece.getFile(position) !== 0 ? p + 7 : p, //Capturing for White\n                    p => Piece.getFile(position) !== 7 ? p + 9 : p,\n                ] : [\n                    p => Piece.getFile(position) !== 0 ? p - 9 : p, //Capturing for White\n                    p => Piece.getFile(position) !== 7 ? p - 7 : p,\n                ], \"captures\"\n            ))\n\n            //IF THE LAST MOVE WAS A PAWN DOUBLE MOVE\n            if ( history.length > 0 && history[ history.length - 1 ].special === \"DOUBLE\" ) {\n                let lastMove = history[history.length - 1];\n                if ( lastMove.to === position + 1 && Piece.getFile(position) !== 7 ) moves.push({\n                    from: position, to: colour > 0 ? position + 9 : position - 7, special: \"EP\"\n                });\n                else if ( lastMove.to === position - 1 && Piece.getFile(position) !== 0 ) moves.push({\n                    from: position, to:  colour > 0 ? position + 7 : position - 9, special: \"EP\"\n                });\n\n            }\n\n        }\n\n        return moves;\n\n    }\n}\n\n\n\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","module.exports = require(\"regenerator-runtime\");\n","import Expendable_Card from \"../Cards/FIDE/Expendable_Card\";\nimport Advance_Card from \"../Cards/FIDE/Advance_Card\";\nimport TacticalRetreat_Card from \"../Cards/FIDE/TacticalRetreat_Card\";\nimport Reposition_Card from \"../Cards/FIDE/Reposition_Card\";\nimport Mount_Card from \"../Cards/FIDE/Mount_Card\";\nimport Demote_Card from \"../Cards/FIDE/Demote_Card\";\nimport Maneuver_Card from \"../Cards/FIDE/Maneuver_Card\";\nimport Flee_Card from \"../Cards/FIDE/Flee_Card\";\nimport Promotion_Card from \"../Cards/FIDE/Promotion_Card\";\nimport Adjust_Card from \"../Cards/CRUSADERS/Adjust_Card\";\nimport Inquisition_Card from \"../Cards/CRUSADERS/Inquisition_Card\";\nimport Hallow_Card from \"../Cards/CRUSADERS/Hallow_Card\";\nimport Repent_Card from \"../Cards/CRUSADERS/Repent_Card\";\nimport Oust_Card from \"../Cards/CRUSADERS/Oust_Card\";\nimport Envoy_Card from \"../Cards/CRUSADERS/Envoy_Card\";\nimport Anoint_Card from \"../Cards/CRUSADERS/Anoint_Card\";\nimport Deception_Card from \"../Cards/CRUSADERS/Deception_Card\";\nimport Clergy_Card from \"../Cards/CRUSADERS/Clergy_Card\";\nimport Convert_Card from \"../Cards/CRUSADERS/Convert_Card\";\nimport BattlePlan_Card from \"../Cards/FIDE/BattlePlan_Card\";\n\nexport class Deck {\n\n    cards: string[]\n\n    name: string\n\n    constructor( _cards:string[], _name:string ) {\n        this.cards = _cards;\n        this.name = _name;\n    }\n\n}\n\nexport const FIDEDECK = new Deck([\n    Advance_Card.id,\n    Advance_Card.id,\n    Expendable_Card.id,\n    Expendable_Card.id,\n    TacticalRetreat_Card.id,\n    TacticalRetreat_Card.id,\n    Reposition_Card.id,\n    Reposition_Card.id,\n    Mount_Card.id,\n    Mount_Card.id,\n    Demote_Card.id,\n    BattlePlan_Card.id,\n    Maneuver_Card.id,\n    Flee_Card.id,\n    Promotion_Card.id\n], \"FIDE Deck\");\n\nexport const CRUSADERSDECK = new Deck([\n    Adjust_Card.id,\n    Adjust_Card.id,\n    Inquisition_Card.id,\n    Inquisition_Card.id,\n    Hallow_Card.id,\n    Hallow_Card.id,\n    Repent_Card.id,\n    Repent_Card.id,\n    Oust_Card.id,\n    Oust_Card.id,\n    Envoy_Card.id,\n    Anoint_Card.id,\n    Deception_Card.id,\n    Clergy_Card.id,\n    Convert_Card.id\n], \"Colourbound Crusaders Deck\");\n\nexport const DEV_DECK = new Deck([\n    Reposition_Card.id,\n    Reposition_Card.id,\n    Deception_Card.id,\n    Deception_Card.id,\n], \"FIDE Deck\");","///\n/// BOARD GENERATION FUNCTIONS\n///\n\n//An Empty Board\nimport Piece from \"../Classes/Piece\";\nimport {Army} from \"../Presets/Armies\";\n\nconst generateTestBoard : () => number[] = () => {\n\n    let board = generateEmptyBoard();\n\n    // board[1] = -Piece.King\n    // board[10] = -Piece.Pawn\n    // board[17] = -Piece.Pawn\n    // board[41] = Piece.Pawn\n    // board[47] = Piece.Pawn\n    // board[48] = Piece.Pawn\n    // board[51] = -Piece.Knight\n    // board[56] = Piece.King\n    // board[61] = Piece.Bede\n    // board[30] = -Piece.Waffle\n    // board[13] = -Piece.Warbishop\n    // board[10] = Piece.Cardinal\n\n    board[36] = Piece.Cardinal\n\n    return board;\n}\n\nconst generateEmptyBoard : () => number[] = () => {\n    let board = [];\n    for ( let i = 0; i <= 63; i++ ) {\n        board.push(0); //Fills the board with 0s\n    }\n    return board;\n}\n\n//The Standard FIDE Board\nconst generateFIDEBoard : () => number[] = () => {\n    let board = generateEmptyBoard();\n\n    //Add the pawns\n    for (let i = 8; i <= 15; i++) {\n        board[i] = Piece.Pawn;\n        board[63 - i] = -Piece.Pawn;\n    }\n\n    //Rooks\n    board[0] = Piece.Rook;\n    board[7] = Piece.Rook;\n    board[56] = -Piece.Rook;\n    board[63] = -Piece.Rook;\n\n    //Knights\n    board[1] = Piece.Knight;\n    board[6] = Piece.Knight;\n    board[57] = -Piece.Knight;\n    board[62] = -Piece.Knight;\n\n    //Bishops\n    board[2] = Piece.Bishop;\n    board[5] = Piece.Bishop;\n    board[58] = -Piece.Bishop;\n    board[61] = -Piece.Bishop;\n\n    //Queens\n    board[3] = Piece.Queen;\n    board[59] = -Piece.Queen;\n\n    //Kings\n    board[4] = Piece.King;\n    board[60] = -Piece.King;\n\n    return board;\n\n}\n\n// GENERATE BOARD FROM TWO ARMIES\nconst generateBoardFromArmies: ( wArmy: Army, bArmy: Army ) => number[] = ( whiteArmy, blackArmy ) => {\n    let board = generateEmptyBoard();\n    whiteArmy.pieces.map( //White army\n        ( piece, index ) => board[index] = piece\n    )\n    blackArmy.pieces.map( //Black army\n        ( piece, index ) => board[56 + index] = piece * -1\n    )\n    //Add the pawns\n    for (let i = 8; i <= 15; i++) {\n        board[i] = Piece.Pawn;\n        board[63 - i] = -Piece.Pawn;\n    }\n    return board;\n}\n\nexport {\n    generateEmptyBoard,\n    generateFIDEBoard,\n    generateTestBoard,\n    generateBoardFromArmies\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nexport function expose(obj: any, ep: Endpoint = self as any) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n        default:\n          return;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n        }\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: MessageType.RELEASE,\n            path: path.map((p) => p.toString()),\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer<T>(obj: T, transfers: Transferable[]): T {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = self,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","///\n/// EVALUATIONS\n///\n\nimport Piece from \"../Classes/Piece\";\nimport GamePiece from \"../Pieces/GamePiece\";\nimport {filterLegalMoves, isCheck} from \"./Checks\";\nimport ActualMove from \"../Classes/Move\";\nimport {legalMove} from \"../types\";\nimport Board from \"../Classes/Board\";\nimport {arraysAreEqual} from \"./Utils\";\nimport OngoingEffect from \"../Classes/OngoingEffect\";\n\nconst materialEvaluation = (board : number[] ) => {\n    return board.filter(p => p !== Piece.None).reduce((t, piece) => {\n        if (Piece.getPiece(piece) === null) return t;\n        else if (piece > 0) return t + (Piece.getPiece(piece) as GamePiece).materialValue; //Positive for white\n        else if (piece < 0) return t - (Piece.getPiece(piece) as GamePiece).materialValue; //Negative for black\n        else return t;\n    }, 0);\n}\n\nconst positionalEngineEvaluation = ( board : number[], history: ActualMove[], _pieces?: (GamePiece|null)[], effects?: OngoingEffect[] ) => {\n\n\n    let startTime = performance.now();\n\n    if ( isCheck( board, history, 1, undefined  )){\n        let wMoves =  filterLegalMoves( Board.getLegalMoves( board, history, { colour: 1 } ), board, history, 1, effects || [] );\n        //If white is checkmated, return negative infinity.\n        if ( wMoves.length === 0 ) return Number.NEGATIVE_INFINITY\n    }\n    else if ( isCheck( board, history, -1, undefined )) {\n        let bMoves = filterLegalMoves( Board.getLegalMoves( board, history, { colour: -1 } ), board, history, -1, effects || [] );\n        //If black mated, return infinity\n        if ( bMoves.length === 0 ) return Number.POSITIVE_INFINITY\n    }\n\n    let val = 0;\n\n    let i = 0, len = board.length;\n    let pieces = _pieces || Piece.PIECE_OBJECTS;\n    while ( i < len ) {\n        let index = i;\n        const p = pieces[ Math.abs(board[index]) ];\n        if (p) {\n            let value = p.engineValue\n            if ( board[index] > 0 ) {\n                val += value + p.valueGrid[63 - index]\n            }\n            else val -= ( value + p.valueGrid[index] );\n        }\n        i++\n    }\n\n\n    let endTime = performance.now();\n\n    let elapsed = endTime - startTime;\n    if (elapsed > 5) {\n        console.log(`Took ${ elapsed } ms to evaluate after ${ history[history.length - 1].getMoveName() }`);\n    }\n\n    return val\n}\n\n\nexport {\n    materialEvaluation,\n    positionalEngineEvaluation\n}","import {legalMove} from \"../types\";\nimport Piece from \"../Classes/Piece\";\nimport {AdditionalOptions} from \"../Classes/Game\";\n\n///\n/// ADDS PROMOTIONS TO A LIST OF LEGAL MOVES\n///\n\nconst filterPromotionPieces = ( army : number[], colour : 1 | -1 ) => {\n    //We want to remove duplicates\n    let filtered = army.reduce(( acc, cur ) => acc.indexOf( cur ) === -1 ? [ ...acc, cur ] : acc, [] as number[]);\n    return filtered.filter( piece => Math.abs(piece) !== Piece.King ).sort( (a, b) => a - b ).map( piece => colour > 0 ? piece : -piece )\n}\n\nexport type promotionMove = {\n    move: legalMove,\n    additional?: Partial<AdditionalOptions>\n}\n\nconst includePromotion = ( board:number[], legalMoves : legalMove[], army: number[], colour: 1 | -1 ) => legalMoves.map( move => {\n    let validPromotionPieces = filterPromotionPieces(army, colour);\n    if ( board[ move.from ] === ( -1 ) * Piece.Pawn && ( move.to < 8 || move.to > 55 ) ) {\n        //Promotions\n        let promotions = [] as promotionMove[]\n        for ( let promotionTo of validPromotionPieces ) {\n            promotions.push( { move: Object.assign( { special: \"PROMOTION\" }, move ), additional: { promotionTo } } )\n        }\n        return promotions;\n    }\n    else {\n        //Everything else\n        return { move } as promotionMove\n    }\n} ).reduce<promotionMove[]>(\n    ( acc, next ,) => {\n        if ( Array.isArray(next) ) return [ ...acc, ...next ]\n        else return [ ...acc, next ]\n    }, [] as promotionMove[]\n)\n\nexport default includePromotion","import Game from \"../Classes/Game\";\nimport {filterLegalMoves, isCheck} from \"../helpers/Checks\";\nimport Board from \"../Classes/Board\";\nimport {positionalEngineEvaluation} from \"../helpers/Evaluation\";\nimport includePromotion, {promotionMove} from \"./IncludePromotions\";\nimport Piece from \"../Classes/Piece\";\nimport GamePiece from \"../Pieces/GamePiece\";\nimport ActualMove from \"../Classes/Move\";\nimport Card from \"../Cards/Card\";\n\n///\n/// MINIMAX ALGORITHM FOR FINDING MOVES\n///\n\n//If we're maximising (white), then it will have just been black's turn\n//If we're minimising (black), then it will have just been white's turn\n// ALPHA represents the MIN score the MAXIMISING player is guaranteed\n// BETA represents the MAX score the MINIMISING player is guaranteed\n\nlet actualMoves = ( moves: any[] ) => moves.filter( m => m instanceof ActualMove );\n\nconst miniMax = (g : Game, depth : number, maximising : boolean, army: number[], hashGet:(b:number[])=>[number, number, boolean]|null, hashSet:(b:number[], e:number, t:number, q:boolean)=>void, counter:()=>void, original_depth:number = depth, alpha:number = -Infinity, beta:number = Infinity, pieces: (GamePiece | null)[], hand: Card[], handColour: number ) => {\n\n\n    ///Another exit point\n    ///Returned values are meaningless, won't read them\n\n    let fastGetPiece = (p:number) => pieces[ Math.abs(p) ]\n\n    let col = maximising ? 1 : -1 as 1 | -1;\n\n    let g_board = g.getBoard(), g_moves = g.getMoves();\n    let g_moves_actual = actualMoves(g_moves);\n    let effects = g.getCurrentOngoingEffects();\n    let g_chaosScore = g.getChaosScore();\n\n    let partialLegalCaptures =  Board.getLegalMoves( g_board, g_moves_actual, { colour: col, mode: \"captures\" } )\n    let partialLegalMoves =  Board.getLegalMoves( g_board, g_moves_actual, { colour: col, mode: \"moves\" } )\n    // let partialLegalMoves = Board.getLegalMoves( g.getBoard(), g.getMoves(), { colour: col } )\n    let filteredLegalMoves = filterLegalMoves( partialLegalMoves, g_board, g_moves_actual, col, effects );\n    let filteredLegalCaptures = filterLegalMoves( partialLegalCaptures, g_board, g_moves_actual, col, effects );\n    let unorderedMoves = includePromotion( g_board, filteredLegalMoves, army, col );\n    let unorderedCaptures = includePromotion( g_board, filteredLegalCaptures, army, col );\n\n    //We want to order our moves.\n    let orderedPromotionMoves = [...unorderedMoves, ...unorderedCaptures].filter( m => m.additional?.promotionTo )\n        .sort(( p, n ) =>\n            (fastGetPiece(n.additional?.promotionTo||1)?.engineValue || 0) - ( fastGetPiece(p.additional?.promotionTo||1)?.engineValue || 0 ))\n\n    let orderedCaptures = unorderedCaptures.sort(( p, n ) => (fastGetPiece(g_board[n.move.to] )?.engineValue || 0) - (fastGetPiece( g_board[p.move.to] )?.engineValue || 0) )\n\n    let orderedPawnMoves = unorderedMoves.filter( m => g_board[m.move.to] === 0 && g_board[m.move.from] === col * Piece.Pawn )\n        .sort(( p, n ) => col * (Piece.getRank( n.move.to ) - Piece.getRank( n.move.to )) ) //Moving pawns further up\n        .sort(( p, n ) => Math.abs( 4.5 - Piece.getFile(p.move.to) ) - Math.abs( 4.5 - Piece.getFile(n.move.to) )) //Moving pawns towards the centre\n    let remainingMoves = unorderedMoves.filter( m => g_board[m.move.to] === 0  && g_board[m.move.from] !== col * Piece.Pawn ) ;\n\n\n    let legalMoves = [\n        ...orderedPromotionMoves, /// PROMOTING IS USUALLY GOOD,\n        ...orderedCaptures, /// THEN CAPTURES\n        ...orderedPawnMoves, /// THEN MOVING PAWNS\n        ...remainingMoves /// THEN THE REST\n    ];\n\n    let isCheckMate = isCheck( g_board, g_moves_actual, col, undefined) && legalMoves.length === 0; //am I in check?\n    let oppoonentLegalCaptures =  Board.getLegalMoves( g_board, g_moves_actual, { colour: -col, mode: \"captures\" } )\n\n    if ( depth === -3 || isCheckMate || ( depth <= 0 && filterLegalMoves(oppoonentLegalCaptures, g_board, g_moves_actual, col, effects || []).length === 0 )) {\n        //We've reached the end! Return the final evaluation\n        let quiescence_quiet = filterLegalMoves(oppoonentLegalCaptures, g_board, g_moves_actual, col, effects || []).length === 0\n        let ev = positionalEngineEvaluation( g_board, g_moves_actual, pieces );\n        hashSet( g_board, ev, g.getMoves().length + depth, quiescence_quiet || isCheckMate ); //Will return quiet if there are no captures available, or if checkmate\n        counter()\n        return [ ev , { move: { from: -1, to: -1 } }, g.getMoves().length, quiescence_quiet || isCheckMate ] as [ number, promotionMove, number, boolean ];\n    }\n    else {\n        //The evaluation hasn't finished yet!\n\n        let value = maximising ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;\n        let move = legalMoves[0] as promotionMove | cardMove;\n        let quiet = false;\n        let move_depth = depth;\n\n        //THERE ARE SOME THINGS WE HAVE TO FILTER - CASTLING\n        let partFilter = legalMoves.filter( ({move}) => {\n            //THERE ARE SOME SPECIAL RULES FOR SPECIAL MOVES\n            if ( move.special === \"CASTLE\") {\n                if ( isCheck( g_board, g_moves_actual, col ) ) return false; //Cannot castle out of check\n                let kingsRook = col > 0 ? 7 : 63;\n                let queensRook = col > 0 ? 0 : 56;\n                if ( move.to === kingsRook - 1 && Board.isThreatened( kingsRook - 2, g_board, g_moves_actual, -col )) return false;\n                if ( move.to === queensRook + 2 && Board.isThreatened( queensRook + 3, g_board, g_moves_actual, -col ) ) return false;\n            }\n\n            return true;\n        } )\n\n        for ( let { move: m, additional } of partFilter ) {\n\n            g.Move( m.from, m.to, m.special, additional );\n\n            if (!isCheck(g.getBoard(), actualMoves(g.getMoves()), col)) {\n\n                let hashedEval = hashGet(g.getBoard());\n                let ev:number = 0;\n                let temp_quiet = false;\n                let temp_depth = 0;\n\n                //Where we started this evaluation from\n                let evaluatingFrom = g.getMoves().length + depth - original_depth;\n\n                if ( hashedEval && ( hashedEval[2]  || ( hashedEval[1] - evaluatingFrom >= 2)) ) {\n                    ev = hashedEval[0]\n                    temp_depth = hashedEval[1]\n                    temp_quiet = hashedEval[2]\n                }\n                else {\n                    let minmax = miniMax(g, depth - 1, !maximising, army, hashGet, hashSet, counter, original_depth, alpha, beta, pieces, hand, handColour);\n                    ev = minmax[0]\n\n                    //Here we can do some special evaluations\n                    if (g.getMoves().length <= 20 || g.getBoard().filter(p => p !== Piece.None).length >= 24 ) {\n                        //We're still roughly in the opening\n                        if ( Math.abs(g.getBoard()[m.from]) === Piece.Pawn ) ev += 30 //Encourage pawn moves\n                        else if ( Math.abs(g.getBoard()[m.from]) === Piece.Knight || Math.abs(g.getBoard()[m.from]) === Piece.Bishop ) ev += 15 //Encourage pawn moves\n                    }\n\n                    temp_depth = minmax[2]\n                    temp_quiet = minmax[3]\n                    hashSet(g.getBoard(), ev, g.getMoves().length, temp_quiet);\n                }\n                //Return straight away if we find a forced mate.\n                g.UnMove()\n\n                function update() {\n                    value = ev;\n                    move = {move: m, additional}\n                    quiet = temp_quiet\n                    move_depth = temp_depth;\n                }\n\n                if (maximising) {\n                    if (value <= ev) update()\n                    if (value >= beta) break; //β cutoff\n                    alpha = Math.max(alpha, value);\n                } else {\n                    if (value >= ev) {\n                        value = ev;\n                        move = {move: m, additional};\n                    }\n                    if (value <= alpha) break; //α cutoff\n                    beta = Math.min(beta, value)\n                }\n            }\n            else g.UnMove()\n        }\n\n        //We also want to try card moves!\n        if (maximising === (handColour > 0) && depth === 2) {\n            //IT'S OUR TURN - don't know opponent's hand, so can't take it into account.\n            let playable_hand = hand.filter( c => c.cost <= g_chaosScore );\n            if (g.getMoves().length > 10) console.log(g.getMoves(), depth)\n            for ( let index in playable_hand ) {\n                let card = playable_hand[Number.parseInt(index)];\n                let filteredHand = hand.filter((c) => c.getUUID() !== card.getUUID());\n\n                //for every card, we want to get every possible move.\n\n                let targetCombinations: (number[])[] = []\n\n                //Recursively find all targets\n                function getSubsequentTargets( targets: number[] ) {\n                    if (targets.length === card.targets) {\n                        targetCombinations.push(targets);\n                        return;\n                    }\n                    let nextTargets = card.getValidTargets[0]( g_board, col, g_moves_actual, targets );\n                    nextTargets.forEach( target => {\n                        getSubsequentTargets([ ...targets, target ]);\n                    } )\n                }\n\n\n                //CALL THE FUNCTION\n                getSubsequentTargets([]);\n\n                for ( let targets of targetCombinations ) {\n                    //EVALUATE TARGETS GOES HERE\n                    let ev: number = 0;\n                    let temp_quiet = false;\n                    let temp_depth = 0;\n\n                    g.PlayCard( card, targets );\n\n                    // IF WE JUST PLAYED A FAST CARD, THEN WE DON'T HAVE TO CHANGE WHETHER OR NOT WE ARE MAXIMISING\n                    let minmax = miniMax(g, depth - 1, card.fast ? maximising : !maximising, army, hashGet, hashSet, counter, original_depth, alpha, beta, pieces, filteredHand, handColour);\n                    ev = minmax[0];\n                    temp_depth = minmax[2];\n                    temp_quiet = minmax[3];\n\n\n                    g.UnMove();\n\n                    function update() {\n                        value = ev;\n                        move = { id: card.id, targets}\n                        quiet = temp_quiet\n                        move_depth = temp_depth;\n                    }\n\n                    if (maximising) {\n                        if (value <= ev) update()\n                        if (value >= beta) break; //β cutoff\n                        alpha = Math.max(alpha, value);\n                    } else {\n                        if (value >= ev) update()\n                        if (value <= alpha) break; //α cutoff\n                        beta = Math.min(beta, value)\n                    }\n\n\n                }\n\n            }\n        }\n\n        return [ value, move, move_depth, quiet ] as [ number, promotionMove | cardMove, number, boolean ];\n\n    }\n\n}\n\nexport type cardMove = {\n    id: string,\n    targets: number[]\n}\n\nexport default miniMax;","import Game from \"../Classes/Game\";\nimport OpeningBook from \"./openings.json\"\nimport {legalMove} from \"../types\";\nimport Board from \"../Classes/Board\";\nimport {filterLegalMoves} from \"../helpers/Checks\";\nimport Piece from \"../Classes/Piece\";\nimport {promotionMove} from \"./IncludePromotions\";\nimport {randomFromList} from \"../helpers/Utils\";\nimport { getActualMoves } from \"../helpers/MoveFilter\";\n\n///\n/// QUERYING THE OPENING BOOK\n///\n\nconst queryOpeningBook = ( g : Game, col: number = -1, firstMove: boolean = false ) => {\n\n    //We want to see if there are any openings left\n    let b = g.getBoard();\n    let h = getActualMoves(g.getMoves());\n\n    let moves = [] as legalMove[];\n    let openingName = \"\";\n\n    for ( let opening of OpeningBook ) {\n\n        let om = opening.moves;\n\n        //However, if we're on the very first opening, we can just select one randomly\n        if (firstMove ) {\n            let randomOpening = randomFromList(Object.values(OpeningBook));\n            om = randomOpening.moves;\n        }\n\n        // console.log(`Random Opening: ${ randomOpening }`)\n\n        //An array in form [ \"e4\", \"Nf6\", \"e5\", \"Nd5\" ]\n        let parsedOM = om.split(\" \").filter( m => m.indexOf(\".\") === -1 );\n\n        let isMatch = true;\n\n        //Go through the history one by one\n        h.forEach( (move, index) => {\n            if ( move.getMoveName() !== parsedOM[index] ) {\n                isMatch = false;\n            }\n        } )\n\n        if (isMatch && parsedOM[h.length]) {\n\n            let nextMove = parsedOM[ h.length ];\n            let toStr = nextMove.length === 3 ? nextMove.substr(1, 3) : nextMove\n            let moving = nextMove.length === 3 ? nextMove[0] : \"P\"\n            let col = h.length % 2 === 0 ? 1 : -1;\n            const pseudo = Board.getLegalMoves(b, h, { colour :  col })\n            const legal = filterLegalMoves(pseudo, b, h, col, g.getCurrentOngoingEffects() );\n\n            //If in the form Nbd2, we also want to be able to know which piece to move\n            let movingFrom = nextMove.length === 4 ? nextMove[2] : null;\n\n            //We also need to account for capturing pieces\n            if ( nextMove.indexOf(\"x\") !== -1 ) {\n                //THERE WAS A CAPTURE INVOLVED - typically in format exd6\n                if (nextMove.length === 4) {\n                    ///IN FORMAT exd6\n                    toStr = nextMove.substr(2);\n                    if ( nextMove[0] === nextMove[0].toLowerCase() ) {\n                        //Is a pawn capturing something\n                        //Try and find where the pawn is moving from\n                        b.map((p, s) => p === Piece.Pawn * col && Piece.getSquareName(s)[0] === nextMove[0]\n                            ? movingFrom = Piece.getSquareName(s) : () => {})\n                        moving = \"P\";\n\n                    }\n                    else {\n                        //Is a non-pawn capturing something - eg Nxd7\n                        moving = nextMove[0];\n                        b.map((p, s) => Piece.getPiece(p)?.shortName.toLowerCase() === moving.toLowerCase()\n                            && Piece.getSquareName(s)[0] === nextMove[0] ? movingFrom = Piece.getSquareName(s) : () => {})\n                    }\n                }\n            }\n\n            //We want to find which piece moved to where\n            let validMove = legal.filter(m => Piece.getPiece( b[m.from] )?.shortName.toLowerCase() === moving.toLowerCase()\n                && Piece.getSquareName( m.to ).toLowerCase() === toStr.toLowerCase()\n                && ( !movingFrom || Piece.getSquareName(m.from) === movingFrom || Piece.getSquareName(m.from)[0] === movingFrom ) );\n\n            if (validMove?.length > 0) {\n                moves.push(validMove[0])\n                if (firstMove) return [{ move: validMove[0]}, opening.name ]\n                if (parsedOM.length === h.length + 1) openingName = opening.name\n                // console.log(`Identified: the ${ opening.name }`)\n            }\n\n        }\n\n    }\n    return moves[0] ? [{move: randomFromList(moves)}, openingName] as [promotionMove, string] : [null, null]\n\n}\n\nexport default queryOpeningBook;","import {arraysAreEqual} from \"../helpers/Utils\";\n\nconst BOARD = 0, EVAL = 1, TURN = 2, QUIET = 3;\nexport default class transpositionTable {\n\n    table : [ number[], number, number, boolean ][][];\n    size : number;\n\n    constructor() {\n        this.table = new Array(4999); //A prime number\n        this.size = 0;\n    }\n\n    //This is for hashing the positions\n    hash( board: number[] ) {\n        let arrayHash = [...board].map( (p, i) => [...(p * i).toString()]\n            .reduce((acc, next) => acc + next.charCodeAt(0), 0));\n        return arrayHash.reduce((a, n) => a + n) % 4999;\n    }\n\n    set( board: number[], evaluation: number, turnNumber : number, quiet : boolean ) {\n        const index = this.hash(board);\n        if (this.table[index]) {\n            //If the index already exists\n            for ( let pairIndex in this.table[index] ) {\n                //Loop over the pairs at that index\n                //If we find a match=\n                if ( arraysAreEqual( board, this.table[index][pairIndex][BOARD] ) ) {\n                    this.table[index][pairIndex] = [[...board], evaluation, turnNumber, quiet]; //was storing at this.table[index][EVAL], where EVAL = 1\n                    return;\n                }\n            }\n            //No existing element, push a new pair\n            this.table[index].push([[...board], evaluation, turnNumber, quiet]);\n            return;\n        }\n        this.table[index] = [[[...board], evaluation, turnNumber, quiet]];\n        this.size++;\n    }\n\n    get( board: number[] ) : [number, number, boolean] | null {\n        const index = this.hash(board);\n        if (this.table[index]) {\n            for ( let pair of this.table[index] ) {\n                //Loop through possible matches\n                if ( arraysAreEqual( board, pair[BOARD] ) ) {\n                    return [ pair[EVAL], pair[TURN], pair[QUIET] ]\n                }\n            }\n        }\n        //If all else fails,\n        return null;\n    }\n}","import ActualMove from \"../Classes/Move\";\nimport Game from \"../Classes/Game\";\nimport {SpecialMove} from \"../types\";\nimport {positionalEngineEvaluation} from \"../helpers/Evaluation\";\nimport Piece from \"../Classes/Piece\";\nimport miniMax, { cardMove } from \"./MiniMax\";\nimport queryOpeningBook from \"./QueryOpeningBook\";\nimport transpositionTable from \"./HashTable\";\nimport { getActualMoves } from \"../helpers/MoveFilter\";\nimport OngoingEffect from \"../Classes/OngoingEffect\";\nimport ALL_CARDS from \"../Cards/Cards\";\nimport {promotionMove} from \"./IncludePromotions\";\n\n/// FIRST STAGE - COMPLETELY RANDOM\n\n// Gets a random element from a list\n\nexport type moveProxy = {\n    from: number, to: number, moving: number, captured: number, specify: number, special: SpecialMove | undefined\n}\n\nexport type effectProxy = {\n    square: number, name: string, target: \"piece\" | \"square\", duration: number\n}\n\n// type EvaluatedMove = {\n//     move: legalMove,\n//     ev: number,\n//     additional?: Partial<AdditionalOptions>\n// }\n\nlet table = new transpositionTable();\n\n///\n/// THE MAIN MOVE GENERATOR\n///\nconst moveGenerator = ( board: number[], history: moveProxy[], army: number[], colour: number, effects : effectProxy[], hand: string[], options: {} = {}  ) => {\n\n    console.log(colour)\n\n    //CREATE OUR NEW GAME\n    let g = new Game(\n        [...board],\n        history.map( m => new ActualMove( m.from, m.to, m.moving, m.captured, m.specify, m.special )  ),\n    )\n\n    if (g.getCurrentTurn() !== colour) g.dangerouslySetCurrentTurn(colour)\n\n    effects.forEach(e => g.addOngoingEffect( new OngoingEffect( e.square, e.name, e.duration, \"\", e.target )  ))\n\n\n    let g_moves_actual = getActualMoves(g.getMoves());\n\n    let parsedHand = hand.map( id => ALL_CARDS[id] );\n\n    //BEFORE WE SEARCH FOR ACTUAL MOVES, LET'S EXAMINE THE OPENING BOOK\n    console.log(\"Choosing Opening...\")\n\n    if (history.length === 0 && colour >= 1) {\n        //THIS IS OUR FIRST MOVE!\n        let [ opening ] = queryOpeningBook( g, colour, true );\n        if (opening) return opening;\n    }\n\n    let [opening, openingName] = queryOpeningBook( g, colour );\n    const DEPTH = 2;\n\n    if (opening) {\n        console.log(`Opening: ${ openingName }`)\n        return opening;\n    }\n\n    console.group(`GENERATING MOVE ${ g.getMoves().length + 1 }`)\n\n    console.log(\"Generating...\")\n\n    console.time(`MiniMax with depth ${ DEPTH }`)\n\n    let nodes = 0;\n    let counter = () => nodes++\n\n    let pieces = Piece.PIECE_OBJECTS;\n    let move = miniMax( g, DEPTH, colour > 0, army, (b) => table.get(b), (b, e, t, q) => table.set(b, e, t, q), counter, undefined, undefined, undefined, pieces, parsedHand, colour );\n\n    console.log(`Found a move with value ${move[0]}: ${JSON.stringify(move[1])}`)\n    console.log(`Examined ${ nodes } nodes`)\n\n    console.log(`Evaulation before move: ${ positionalEngineEvaluation( g.getBoard(), g_moves_actual ) }`)\n\n    if ( (move[1] as promotionMove).move ) {\n        let m = (move[1] as promotionMove).move\n        g.Move(m.from, m.to, m.special, (m as any).additional);\n    }\n    else {\n        //MOVE IS A CARD MOVE\n        let card = move[1] as cardMove;\n        let playableCard = ALL_CARDS[card.id];\n        g.PlayCard( playableCard, card.targets );\n\n    }\n\n\n    console.log(`Evaulation after move: ${ positionalEngineEvaluation( g.getBoard(), g_moves_actual ) }`)\n\n    g.UnMove();\n\n    console.timeEnd(`MiniMax with depth ${ DEPTH }`);\n\n\n    console.groupEnd();\n\n    // g.Move(move[1].move.from, move[1].move.to, move[1].move.special, move[1].additional);\n    //\n    //\n    //\n    // let wKing = g.getBoard().indexOf( Piece.King );\n    // let bKing = g.getBoard().indexOf( -Piece.King );\n    //\n    // let pos = -1 > 0 ? wKing : bKing;\n    //\n    // let lMove = Board.getLegalMoves(\n    //     g.getBoard(), g.getMoves(), { colour: 1 } )\n    //\n    // console.log( g.getBoard(), g.getBoard().indexOf(Piece.Queen), new Queen().getLegalMoves( 33, g.getBoard(), \"all\", 1 ) )\n    //\n    // console.log(move)\n    //\n    // console.log(g.getLastMove())\n    //\n    // //Are there any attacks on the king?\n    // console.log( lMove.filter(m => m.to === pos), wKing, bKing )\n    //\n    // g.UnMove()\n    // console.log(g.getBoard())\n\n    return move[1];\n\n}\n\n\n///\n/// EVALUATING POSITIONS IN THE BACKGROUND\n///\n\nlet backgroundEvaluating = false;\n// let backgroundCalculations = 0;\n\nconst beginBackgroundEvaluation = async ( board: number[], history: moveProxy[], army: number[], options: {} = {} ) => {\n\n    let g = new Game(\n        [...board],\n        history.map( m => new ActualMove( m.from, m.to, m.moving, m.captured, m.specify, m.special )  ),\n    )\n\n    let opening = queryOpeningBook( g, -1 );\n    if (opening) return;\n\n\n    console.log(\"Background evaluation started - the AI is evaluating moves while you think about your turn.\")\n\n    //WE WANT TO START EVALUATING MOVES IN THE BACKGROUND\n//    backgroundCalculations = 0;\n    backgroundEvaluating = true;\n\n//    const DEPTH = 0;\n    let nodes = 0;\n//    const counter = () => nodes++;\n\n\n    // let move = miniMax( g, DEPTH, false, army, (b) => table.get(b), (b, e, t, q) => table.set(b, e, t, q), counter );\n\n    console.log(`Finished background calculations. Nodes evaluated during your turn: ${ nodes }`)\n\n    if (backgroundEvaluating) console.log(`Analysed all moves`)\n\n    //\n    // const evaluate = ( n : number ) => new Promise<number>( resolve => {\n    //     n++;\n    //     if ( backgroundEvaluating ) setTimeout( () => {\n    //         // console.log(`Done a 'calculation', now up to ${n}`)\n    //         evaluate( n ).then( x => resolve(x) )\n    //     }, 100 );\n    //     else resolve(n)\n    // } )\n    //\n    // evaluate( backgroundCalculations ).then( x => console.log(`Finished background calculations. Calculations performed during your turn: ${ x }`) )\n\n}\n\nconst endBackgroundEvaluation = () => {\n    console.log(\"Any background evaluations ended.\")\n    backgroundEvaluating = false;\n}\n\n\nexport {\n    moveGenerator,\n    beginBackgroundEvaluation,\n    endBackgroundEvaluation\n}","import { expose } from 'comlink';\nimport { moveGenerator , beginBackgroundEvaluation, endBackgroundEvaluation} from \"./MoveGenerator\";\n\nconst worker = {\n    moveGenerator,\n    beginBackgroundEvaluation,\n    endBackgroundEvaluation\n};\n\nexport type opponentWebWorker = typeof worker;\n\nexpose(worker);"],"sourceRoot":""}