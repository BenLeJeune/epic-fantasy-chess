{"version":3,"sources":["types.ts","Pieces/GamePiece.ts","Pieces/FIDE/Pawn.ts","Pieces/FIDE/Knight.ts","Pieces/FIDE/Bishop.ts","Pieces/FIDE/Rook.ts","Pieces/FIDE/Queen.ts","Pieces/FIDE/King.ts","Classes/Piece.ts","components/ChessSquare/ChessSquare.tsx","components/ChessPiece/ChessPiece.tsx","components/TargetingSquare/TargetingSquare.tsx","components/ChessBoard/ChessBoard.tsx","helpers/BoardGenerators.ts","Classes/Game.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FILES","GamePiece","getLegalMoves","position","board","mode","map","p","square","from","to","filter","m","engineValue","materialValue","valueGrid","evaluate","shortName","longName","Pawn","Knight","Bishop","Rook","Queen","King","Piece","None","isWhite","piece","isBlack","Math","abs","getFile","getRank","getSquareName","getStyle","gridRow","gridColumn","getImage","toLowerCase","getPiece","ChessSquare","style","className","id","labels","push","getLabel","ChessPiece","target","unTarget","active","draggable","onDragStart","e","dataTransfer","setData","JSON","stringify","effectAllowed","console","log","onDragEnd","src","alt","toString","TargetingSquare","onDrop","isMove","isCapture","onDragOver","preventDefault","dropEffect","ChessBoard","move","currentTurn","unMove","ev","destination","parse","getData","useState","targeting","setTargeting","pos","Game","moves","Move","UnMove","getBoard","getMoves","getCurrentTurn","this","i","generateEmptyBoard","generateFIDEBoard","App","game","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4033fefa.chunk.js","sourcesContent":["export type Colour = \"white\" | \"black\"\r\n\r\nexport type PieceCategory = \"pawn\" | \"knight\" | \"bishop\" | \"rook\" | \"queen\" | \"king\"\r\n\r\nexport type SquareFile = \"a\" | \"b\" | \"c\" | \"d\" | \"e\" | \"f\" | \"g\" | \"h\"\r\n\r\nexport interface Move {\r\n    from : number,\r\n    to : number,\r\n    piece : number\r\n}\r\n\r\nexport const FILES = [ \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\" ]","import {Move} from \"../types\";\r\n\r\nexport default abstract class GamePiece {\r\n\r\n    //This class will be used for storing data about chess pieces.\r\n    //It will never be instantiated, but will be used\r\n    //Would be static class if js had these\r\n\r\n    ///\r\n    /// EVALUATION\r\n    ///\r\n    public static engineValue : number; //adjusted based on engine evaluation\r\n    public static materialValue : number; //e.g 3\r\n    public static valueGrid : number[]; //A multiplier for each position\r\n    public static evaluate : ( position : number ) => number; //A function to evaluate\r\n\r\n    ///\r\n    /// NAMING & DISPLAYING\r\n    ///\r\n    public static shortName : string; //e.g \"k\"\r\n    public static longName : string; //e.g \"Pawn\"\r\n\r\n    public getLegalMoves : ( position : number,  board : number[], mode : \"all\" | \"moves\" | \"captures\", colour : number) => legalMove[] =\r\n        ( position, board, mode, colour = 1 ) => {\r\n            return board.map( ( p, square ) => {\r\n                if ( square !== position && p === 0) return {\r\n                    from : position,\r\n                    to : square,\r\n                };\r\n                else return null;\r\n            } ).filter( m => m !== null ) as legalMove[];\r\n\r\n        };\r\n}\r\n\r\nexport interface legalMove {\r\n    to : number,\r\n    from : number\r\n}","import GamePiece from \"../GamePiece\";\r\nimport {Move} from \"../../types\";\r\n\r\nexport default class Pawn extends GamePiece {\r\n\r\n    //eval\r\n    public static materialValue = 1;\r\n\r\n    //naming & display\r\n    public static shortName = \"p\";\r\n    public static longName = \"Pawn\";\r\n}","import GamePiece from \"../GamePiece\";\r\nimport {Move} from \"../../types\";\r\n\r\nexport default class Knight extends GamePiece {\r\n\r\n    //eval\r\n    public static materialValue = 3;\r\n\r\n    //naming & display\r\n    public static shortName = \"n\";\r\n    public static longName = \"Knight\";\r\n\r\n}","import GamePiece from \"../GamePiece\";\r\nimport {Move} from \"../../types\";\r\n\r\nexport default class Bishop extends GamePiece {\r\n\r\n    //eval\r\n    public static materialValue = 3;\r\n\r\n    //naming & display\r\n    public static shortName = \"b\";\r\n    public static longName = \"Bishop\";\r\n\r\n}","import GamePiece from \"../GamePiece\";\r\nimport {Move} from \"../../types\";\r\n\r\nexport default class Rook extends GamePiece {\r\n\r\n    //eval\r\n    public static materialValue = 5;\r\n\r\n    //naming & display\r\n    public static shortName = \"r\";\r\n    public static longName = \"Rook\";\r\n\r\n}","import GamePiece from \"../GamePiece\";\r\nimport {Move} from \"../../types\";\r\n\r\nexport default class Queen extends GamePiece {\r\n\r\n    //eval\r\n    public static materialValue = 9;\r\n\r\n    //naming & display\r\n    public static shortName = \"q\";\r\n    public static longName = \"Queen\";\r\n\r\n}","import GamePiece from \"../GamePiece\";\r\nimport {Move} from \"../../types\";\r\n\r\nexport default class King extends GamePiece {\r\n\r\n    //eval\r\n    public static materialValue = 999;\r\n\r\n    //naming & display\r\n    public static shortName = \"k\";\r\n    public static longName = \"Knight\";\r\n\r\n}","import Pawn from \"../Pieces/FIDE/Pawn\";\r\nimport Knight from \"../Pieces/FIDE/Knight\";\r\nimport Bishop from \"../Pieces/FIDE/Bishop\";\r\nimport Rook from \"../Pieces/FIDE/Rook\";\r\nimport Queen from \"../Pieces/FIDE/Queen\";\r\nimport King from \"../Pieces/FIDE/King\";\r\nimport GamePiece from \"../Pieces/GamePiece\";\r\nimport {FILES} from \"../types\";\r\n\r\nexport default class Piece {\r\n\r\n    ///\r\n    /// PIECE NUMBER VALUES - negative for black!\r\n    ///\r\n    public static None = 0;\r\n    public static Pawn = 1;\r\n    public static Knight = 2;\r\n    public static Bishop = 3;\r\n    public static Rook = 4;\r\n    public static Queen = 5;\r\n    public static King = 6;\r\n\r\n    public static isWhite = ( piece : number ) => piece > 0;\r\n    public static isBlack = ( piece : number ) => piece < 0;\r\n\r\n    public static getLegalMoves = ( piece : number, position : number, mode : \"all\" | \"moves\" | \"captures\" ) => {\r\n\r\n        //We can put some nice move logic in here\r\n        //This will only return quasi-legal moves (i.e ignoring checks)\r\n    }\r\n\r\n    public static longName = ( piece : number ) => [\r\n        \"None\", \"Pawn\", \"Knight\", \"Bishop\", \"Rook\", \"Queen\", \"King\"\r\n    ][ Math.abs( piece ) ]\r\n\r\n    public static shortName = ( piece : number ) => [\r\n        \"\", \"p\", \"k\", \"b\", \"r\", \"q\", \"k\"\r\n    ][ Math.abs( piece ) ]\r\n\r\n    public static getFile = ( position : number ) => position % 8;\r\n    public static getRank = ( position : number ) => ( position - ( position % 8 ) ) / 8;\r\n    public static getSquareName = ( position : number ) => `${ FILES[Piece.getFile(position)] }-${ Piece.getRank(position) }`\r\n    public static getStyle = ( position : number ) => {\r\n        return {\r\n            gridRow: `${ 8 - Piece.getRank(position) }/${9 - Piece.getRank(position)}`,\r\n            gridColumn: `${ Piece.getFile(position) + 1 }/${Piece.getFile(position) + 2}`\r\n        }\r\n    }\r\n\r\n    public static getImage = ( piece : number ) => `/assets/pieces/${ Piece.longName( piece ).toLowerCase() }_${ piece > 0 ? \"white\" : \"black\" }.svg`\r\n\r\n    public static getPiece : ( piece : number ) => GamePiece | null = (piece ) => [\r\n        null, new Pawn(), new Knight(), new Bishop(), new Rook(), new Queen(), new King()\r\n    ][ Math.abs(piece) ]\r\n\r\n}","import \"./ChessSquare.css\";\r\nimport React from 'react';\r\nimport {FILES} from \"../../types\";\r\nimport Piece from \"../../Classes/Piece\";\r\n\r\ninterface props {\r\n    position: number\r\n}\r\n\r\nexport default function ChessSquare( { position } : props ) {\r\n\r\n    const getCol = () => {\r\n        if ( ( 7 * Piece.getRank(position) + Piece.getFile(position) ) % 2 === 1 ) return \"light\";\r\n        else return \"dark\"\r\n    }\r\n\r\n    const getLabel = () => {\r\n        const labels = [];\r\n        if ( Piece.getRank(position) === 0 ) { //We show the file if on the first rank\r\n            labels.push( <span className=\"sqLabel bottom\" key=\"file\">{ FILES[ Piece.getFile(position) ] }</span> )\r\n        }\r\n        if ( Piece.getFile(position) === 0 ) { //And we show the rank if on the first file\r\n            labels.push( <span className=\"sqLabel left\" key=\"rank\">{ Piece.getRank(position) }</span> )\r\n        }\r\n\r\n        return labels;\r\n    }\r\n\r\n    return <div style={Piece.getStyle( position )} className={`chessSquare ${ getCol() }`}\r\n                id={ `square-${ FILES[Piece.getFile(position)] }${ Piece.getRank(position) }` }>\r\n        {\r\n            getLabel()\r\n        }\r\n    </div>\r\n\r\n}","import React from 'react';\r\nimport \"./ChessPiece.css\";\r\nimport Piece from \"../../Classes/Piece\";\r\n\r\ninterface props {\r\n    position : number,\r\n    piece : number,\r\n    target: ( position : number ) => void,\r\n    unTarget: ( position : number ) => void,\r\n    active : boolean\r\n}\r\n\r\nexport default function ChessPiece({position, piece, target, unTarget, active}:props) {\r\n\r\n    const onDragStart: ( e : React.DragEvent ) => void = e => {\r\n        //This is fired when the dragging starts\r\n        if ( e.dataTransfer ) {\r\n            target(piece);\r\n            e.dataTransfer.setData(\"text/plain\", JSON.stringify( [ piece, position ] ));\r\n            e.dataTransfer.effectAllowed = \"move\";\r\n            console.log((\"dragging...\"));\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return <div className={`piece ${ active ? \"active\" : \"\" }`}\r\n                style={ Piece.getStyle(position) }\r\n                key={`${ Piece.getFile(position) }-${ Piece.getRank(position) }`}\r\n                draggable\r\n                onDragStart={ onDragStart }\r\n                onDragEnd={ () => unTarget(piece) }\r\n    >\r\n        <img src={ Piece.getImage( piece ) } alt={ piece.toString() } className=\"pieceImg\"/>\r\n    </div>\r\n\r\n}","import React from 'react';\r\nimport \"./TargetingSqaure.css\"\r\nimport Piece from \"../../Classes/Piece\";\r\nimport Game from \"../../Classes/Game\";\r\n\r\ninterface props {\r\n    position : number,\r\n    onDrop : ( e : React.DragEvent ) => void,\r\n    isMove : boolean,\r\n    isCapture : boolean\r\n}\r\n\r\nexport default function TargetingSquare( { position, onDrop, isMove, isCapture } : props ) {\r\n\r\n\r\n    return <div\r\n        style={ Piece.getStyle( position ) }\r\n        className={`targetingSquare ${ isMove ? \"move\" : \"\" } ${ isCapture ? \"capture\" : \"\" }`}\r\n        id={`target_${ Piece.getSquareName( position ) }`}\r\n        onDrop={ onDrop }\r\n        onDragOver={ e => {\r\n            e.preventDefault();\r\n            e.dataTransfer.dropEffect = \"move\";\r\n        } }\r\n    />\r\n\r\n}\r\n\r\nexport {}","import React, {useState} from 'react';\r\nimport ChessSquare from \"../ChessSquare/ChessSquare\";\r\nimport \"./ChessBoard.css\"\r\nimport ChessPiece from \"../ChessPiece/ChessPiece\";\r\nimport Piece from \"../../Classes/Piece\";\r\nimport Game from \"../../Classes/Game\";\r\nimport TargetingSquare from \"../TargetingSquare/TargetingSquare\";\r\nimport GamePiece from \"../../Pieces/GamePiece\";\r\n\r\ninterface Props {\r\n    board : number[],\r\n    currentTurn : number,\r\n    move : ( from : number, to : number ) => void,\r\n    unMove : () => void\r\n}\r\n\r\nexport default function ChessBoard({ board, currentTurn, move, unMove } : Props) {\r\n\r\n    const onDrop = ( ev : React.DragEvent, destination : number ) => {\r\n\r\n        let [ piece, position ] = JSON.parse( ev.dataTransfer.getData(\"text/plain\") ) as [number, number];\r\n        move( position, destination );\r\n\r\n    }\r\n\r\n    const getSquares = () => board.map( (piece, pos) => <ChessSquare position={pos} /> )\r\n\r\n    const getPieces = () => board.map( ( piece, pos ) => piece === 0 ? null :\r\n        <ChessPiece position={ pos }\r\n                    piece={ piece }\r\n                    target={ () => setTargeting([ piece, pos ])  }\r\n                    unTarget={ () => setTargeting([ 0, 0 ]) }\r\n                    active={ targeting[1] === pos || targeting[1] === 0 } /> )\r\n\r\n    const getTargetingSquares = () => Piece.getPiece( targeting[0] ) ?\r\n        (Piece.getPiece( targeting[0] ) as GamePiece).getLegalMoves( targeting[0], board, \"all\", targeting[0] > 0 ? 1 : -1 )\r\n            .map( move =>\r\n                <TargetingSquare\r\n                    position={ move.to }\r\n                    isCapture={ false }\r\n                    isMove={ true }\r\n                    onDrop={ ev => onDrop( ev, move.to ) }\r\n                />\r\n            )\r\n        : null;\r\n\r\n\r\n\r\n    ///\r\n    /// TARGETING\r\n    ///\r\n    // [ piece, position from ]\r\n    const [ targeting, setTargeting ] = useState<[ number, number ]>([ 0, 0 ]);\r\n\r\n    return <>\r\n        <div id=\"ChessBoardWrapper\">\r\n            <div id=\"ChessBoardOuter\">\r\n\r\n                <div id=\"ChessBoardSquares\" className=\"board\">\r\n                    { getSquares() }\r\n                </div>\r\n\r\n                {\r\n                  targeting[0] !== 0 ?<div id=\"ChessBoardTargeting\" className=\"board\">\r\n                      { getTargetingSquares() }\r\n                  </div> : null\r\n                }\r\n\r\n                <div id=\"ChessBoardPieces\" className={`board ${ targeting[0] !== 0 ? \"targeting\" : \"\" }`}>\r\n                    { getPieces() }\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </>\r\n\r\n}","///\r\n/// BOARD GENERATION FUNCTIONS\r\n///\r\n\r\n//An Empty Board\r\nimport Piece from \"../Classes/Piece\";\r\n\r\nconst generateEmptyBoard : () => number[] = () => {\r\n    let board = [];\r\n    for ( let i = 0; i <= 63; i++ ) {\r\n        board.push(0); //Fills the board with 0s\r\n    }\r\n    return board;\r\n}\r\n\r\n//The Standard FIDE Board\r\nconst generateFIDEBoard : () => number[] = () => {\r\n    let board = generateEmptyBoard();\r\n\r\n    //Add the pawns\r\n    for (let i = 8; i <= 15; i++) {\r\n        board[i] = Piece.Pawn;\r\n        board[63 - i] = -Piece.Pawn;\r\n    }\r\n\r\n    //Rooks\r\n    board[0] = Piece.Rook;\r\n    board[7] = Piece.Rook;\r\n    board[56] = -Piece.Rook;\r\n    board[63] = -Piece.Rook;\r\n\r\n    //Knights\r\n    board[1] = Piece.Knight;\r\n    board[6] = Piece.Knight;\r\n    board[57] = -Piece.Knight;\r\n    board[62] = -Piece.Knight;\r\n\r\n    //Bishops\r\n    board[2] = Piece.Bishop;\r\n    board[5] = Piece.Bishop;\r\n    board[58] = -Piece.Bishop;\r\n    board[61] = -Piece.Bishop;\r\n\r\n    //Queens\r\n    board[3] = Piece.Queen;\r\n    board[59] = -Piece.Queen;\r\n\r\n    //Kings\r\n    board[4] = Piece.King;\r\n    board[60] = -Piece.King;\r\n\r\n    return board;\r\n\r\n}\r\n\r\nexport {\r\n    generateEmptyBoard,\r\n    generateFIDEBoard\r\n}","import {Move} from \"../types\";\r\nimport {generateFIDEBoard} from \"../helpers/BoardGenerators\";\r\n\r\nexport default class Game {\r\n\r\n    private readonly board : number[]\r\n\r\n    private currentTurn : number;\r\n\r\n    private readonly moves : Move[]\r\n\r\n    public Move = ( from : number, to : number ) => {\r\n        //Let's add the move function\r\n        //Keeping it simple for now, let's just make the move. Forcefully.\r\n        this.moves.push( {\r\n            from, to,\r\n            piece : this.board[to]\r\n        } );\r\n\r\n        //Let's move the piece on To to From.\r\n        this.board[to] = this.board[from];\r\n        this.board[from] = 0;\r\n\r\n    }\r\n\r\n    public UnMove = () => {}\r\n\r\n    constructor() {\r\n        this.board = generateFIDEBoard();\r\n        this.moves = [] as Move[];\r\n        this.currentTurn = 1;\r\n    }\r\n\r\n    public getBoard = () => this.board;\r\n    public getMoves = () => this.moves;\r\n    public getCurrentTurn = () => this.currentTurn;\r\n\r\n}","import React, {useEffect, useState} from 'react';\r\nimport ChessBoard from \"./components/ChessBoard/ChessBoard\";\r\nimport Game from \"./Classes/Game\";\r\n\r\n//The main component\r\nfunction App() {\r\n\r\n  const [ game, setGame ] = useState<Game>( new Game() );\r\n\r\n  useEffect(() => {\r\n\r\n  })\r\n\r\n  return <div className=\"app\">\r\n    <div className=\"chessBoardColumn\">\r\n      <ChessBoard board={ game.getBoard() } currentTurn={ game.getCurrentTurn() } move={ game.Move } unMove={ game.UnMove } />\r\n    </div>\r\n  </div>\r\n\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}